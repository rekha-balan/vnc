<Application x:Class="VNCAssemblyViewer.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"    
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"  
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"    
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"      
    xmlns:local="clr-namespace:VNCAssemblyViewer"               
    Startup="Application_Startup"
    SessionEnding="Application_SessionEnding" Deactivated="Application_Deactivated" Exit="Application_Exit">
    <!--StartupUri="MainWindow.xaml"-->
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            <!-- 
                Place global resources from other Resource Dictionaries here.
                These typically will be found under the /Resources/Xaml folder in the current project.
                
                The order is important as things must be declared before used. 
             -->

                <ResourceDictionary Source="/Resources/Xaml/BrandingVisuals.xaml"/>
                <ResourceDictionary Source="/Resources/Xaml/Brushes.xaml"/>
                <ResourceDictionary Source="/Resources/Xaml/StoryboardAnimation.xaml" />

                <ResourceDictionary Source="/Resources/Xaml/Button_Styles.xaml"/>
                <ResourceDictionary Source="/Resources/Xaml/ServerListStyle.xaml"/>
                <ResourceDictionary Source="/Resources/Xaml/AutoHideGroup_Styles.xaml"/>
                <ResourceDictionary Source="/Resources/Xaml/ColumnHeader_Styles.xaml"/>

                <ResourceDictionary Source="/Resources/Xaml/Display_StylesAndTemplates.xaml" />
                <ResourceDictionary Source="/Resources/Xaml/ControlStylesAndTemplates.xaml" />
                <ResourceDictionary Source="/Resources/Xaml/ToolBoxResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="LooklessListBox" TargetType="{x:Type ListBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ScrollViewer ClipToBounds="False" x:Name="scrollViewer">
                                <StackPanel Orientation="Vertical" IsItemsHost="True"  ClipToBounds="False" />
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LooklessWrappingListBox" TargetType="{x:Type ListBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                <WrapPanel IsItemsHost="True" />
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LooklessButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid  Background="transparent" Cursor="Hand">
                                <ContentPresenter 
                                    VerticalAlignment="{TemplateBinding Property=VerticalContentAlignment}" 
                                    HorizontalAlignment="{TemplateBinding Property=HorizontalContentAlignment}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LooklessButtonWithHover" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="RootGrid"   Background="transparent" Cursor="Hand" Opacity="0.5">
                                <ContentPresenter 
                                    VerticalAlignment="{TemplateBinding Property=VerticalContentAlignment}" 
                                    HorizontalAlignment="{TemplateBinding Property=HorizontalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1" TargetName="RootGrid" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
