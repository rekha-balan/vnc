<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxbc="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    
    
    <dxc:BooleanToVisibilityConverter x:Key="notInvertedBooleanToVisibilityConverter" Invert="False" />
    <dxc:BooleanToVisibilityConverter x:Key="invertedBooleanToVisibilityConverter" Invert="True" />

    <sys:Double x:Key="{dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}">0.35</sys:Double>
    <Thickness x:Key="{dxbt:BarItemThemeKey ResourceKey=InMenuClientPadding}">0,3,0,3</Thickness>
    <Thickness x:Key="{dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}">6,0,14,0</Thickness>
    <Thickness x:Key="{dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}">6,0,14,0</Thickness>
    <Thickness x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=BorderMarginInMenu}">-2</Thickness>

    
    <!--<DataTemplate x:Key="{dxbt:BarItemThemeKey ResourceKey=SnappedContentTemplate}">
        <dxc:MeasurePixelSnapper SnapperType="Around">
            <dx:DXContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{Binding Path=Link.ActualContentTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarItemLinkControl}}}"/>
        </dxc:MeasurePixelSnapper>
    </DataTemplate>-->
    
    <sys:Double x:Key="Double.NaN">NaN</sys:Double>
    <ControlTemplate x:Key="{dxbt:BarButtonItemThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:BarButtonItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=Margin}}" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{TemplateBinding BorderStyle}" ItemPosition="{Binding Path=(dxb:ItemPositionTypeProvider.HorizontalItemPosition), RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel Style="{TemplateBinding LayoutPanelStyle}" Alignment="{TemplateBinding ActualGlyphAlignment}">
                <dxc:Items2Panel.Content1>
                    <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">                        
                        <!--BEGIN WPF-->
                            <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{TemplateBinding GlyphRenderTransform}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                       RenderTransform="{TemplateBinding GlyphRenderTransform}"/>
                        ONLY SL-->
                    </dxc:MeasurePixelSnapperContentControl>                    
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <dxc:MeasurePixelSnapperContentControl SnapperType="Around" x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{TemplateBinding NormalContentStyle}" Visibility="{TemplateBinding ActualContentVisibility}" VerticalAlignment="Center" Focusable="False" IsTabStop="False">
                            <!--BEGIN WPF-->
                            <dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                                <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                            </dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                            <dxc:MeasurePixelSnapperContentControl.Template>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <ContentPresenter RecognizesAccessKey="True" />
                                </ControlTemplate>
                            </dxc:MeasurePixelSnapperContentControl.Template>
                            <!--END WPF-->
                    </dxc:MeasurePixelSnapperContentControl>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <dxb:BooleanToIntegerConverter x:Key="booleanToIntegerConverter" />
    <ControlTemplate x:Key="{dxbt:BarButtonItemThemeKey ResourceKey=InRibbonPageGroupTemplate}" TargetType="{x:Type dxb:BarButtonItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{TemplateBinding BorderStyle}" ItemPosition="{Binding Path=(dxb:ItemPositionTypeProvider.HorizontalItemPosition), RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel Style="{TemplateBinding LayoutPanelStyle}" Alignment="{TemplateBinding ActualGlyphAlignment}">
                <dxc:Items2Panel.Content1>
                    <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Top" IsTabStop="False">
                        <!--BEGIN WPF-->
                            <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{TemplateBinding GlyphRenderTransform}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                       RenderTransform="{TemplateBinding GlyphRenderTransform}"/>
                        ONLY SL-->
                    </dxc:MeasurePixelSnapperContentControl>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <dxb:ContentSelector SnapperType="Around" SelectedIndex="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToIntegerConverter}}">
                        <dxb:ContentSelector.Content1>
                            <ContentControl x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{TemplateBinding NormalContentStyle}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                                <!--BEGIN WPF-->
                                <ContentControl.ContentTemplateSelector>
                                    <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ContentControl.ContentTemplateSelector>
                                <!--END WPF-->
                            </ContentControl>
                        </dxb:ContentSelector.Content1>
                        <dxb:ContentSelector.Content2>
                            <dxb:TextSplitterControl Content="{TemplateBinding ActualContent}" IsSelected="{TemplateBinding IsMouseOver}" Style="{DynamicResource {dxbt:BarButtonItemThemeKey ResourceKey=TextSplitterStyleInRibbonPageGroup}}" NormalTextStyle="{DynamicResource {dxbt:BarButtonItemThemeKey ResourceKey=NormalTextStyleInTextSplitter}}" SelectedTextStyle="{DynamicResource {dxbt:BarButtonItemThemeKey ResourceKey=SelectedTextStyleInTextSplitter}}" Visibility="{TemplateBinding ActualContentVisibility}" SplitMethod="BySpace" IsArrowVisible="False" />
                        </dxb:ContentSelector.Content2>
                    </dxb:ContentSelector>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:BarCheckItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=Margin}}" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" ItemPosition="{Binding Path=(dxb:ItemPositionTypeProvider.HorizontalItemPosition), RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxc:Items2Panel.Content1>
                    <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                        <!--BEGIN WPF-->
                            <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                   RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                    </dxc:MeasurePixelSnapperContentControl>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <dxc:MeasurePixelSnapperContentControl SnapperType="Around" x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                            <!--BEGIN WPF-->
                            <dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                                <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                            </dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                            <dxc:MeasurePixelSnapperContentControl.Template>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <ContentPresenter RecognizesAccessKey="True" />
                                </ControlTemplate>
                            </dxc:MeasurePixelSnapperContentControl.Template>
                            <!--END WPF-->
                    </dxc:MeasurePixelSnapperContentControl>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ItemCheckState">
                    <VisualState x:Name="ItemChecked" />
                    <VisualState x:Name="ItemUnchecked" />
                    <VisualState x:Name="ItemIndeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarSplitButtonItemThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:BarSplitButtonItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=Margin}}" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_CustomizationBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel x:Name="itemPanel" Style="{Binding Path=ContentAndArrowLayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" StretchedContent="Content2" Alignment="{Binding Path=ActualArrowAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxc:Items2Panel.Content1>
                    <Grid Name="PART_ArrowButton">
                        <dxb:ItemBorderControl x:Name="PART_ArrowBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" ItemPosition="{TemplateBinding ArrowPartItemPosition}" />
                        <Border Background="Transparent">
                            <ContentControl x:Name="PART_ArrowContent" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Focusable="False" IsTabStop="False">
                                <ContentControl.Content>
                                    <dxb:BarSplitButtonItemArrowControl x:Name="PART_ArrowControl" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowStyle}}" />
                                </ContentControl.Content>
                            </ContentControl>
                        </Border>
                    </Grid>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <Grid>
                        <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" ItemPosition="{TemplateBinding ContentPartItemPosition}" />
                        <dxc:Items2Panel HorizontalAlignment="Center" Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:Items2Panel.Content1>
                                <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                                    <!--BEGIN WPF-->
                                        <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                                    
                                    <!--END WPF-->
                                    <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                               RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                                </dxc:MeasurePixelSnapperContentControl>
                            </dxc:Items2Panel.Content1>
                            <dxc:Items2Panel.Content2>
                                <dxc:MeasurePixelSnapperContentControl SnapperType="Around" x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                                        <!--BEGIN WPF-->
                                    <dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                                            <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                                    <dxc:MeasurePixelSnapperContentControl.Template>
                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                <ContentPresenter RecognizesAccessKey="True" />
                                            </ControlTemplate>
                                    </dxc:MeasurePixelSnapperContentControl.Template>
                                        <!--END WPF-->
                                </dxc:MeasurePixelSnapperContentControl>
                            </dxc:Items2Panel.Content2>
                        </dxc:Items2Panel>
                    </Grid>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ArrowAlignment">
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Bottom" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Top" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Right" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Left" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoArrow">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowButton" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="ArrowHot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="ArrowPressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarSubItemThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:BarSubItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=Margin}}" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" ItemPosition="{Binding Path=(dxb:ItemPositionTypeProvider.HorizontalItemPosition), RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel StretchedContent="Content1" Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualArrowAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxc:Items2Panel.Content1>
                    <dxc:Items2Panel Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxc:Items2Panel.Content1>
                            <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                                <!--BEGIN WPF-->
                                <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                                
                                <!--END WPF-->
                                <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                   RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                            </dxc:MeasurePixelSnapperContentControl>
                        </dxc:Items2Panel.Content1>                 
                        <dxc:Items2Panel.Content2>
                            <dxc:MeasurePixelSnapperContentControl SnapperType="Around" x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Margin="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=ContentMargin}}" Focusable="False" IsTabStop="False">
                                <!--BEGIN WPF-->
                                <dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                                    <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                </dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                                <dxc:MeasurePixelSnapperContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <ContentPresenter RecognizesAccessKey="True" />
                                    </ControlTemplate>
                                </dxc:MeasurePixelSnapperContentControl.Template>
                                <!--END WPF-->
                            </dxc:MeasurePixelSnapperContentControl>
                        </dxc:Items2Panel.Content2>
                    </dxc:Items2Panel>                    
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="PART_ContentToArrowIndent" Width="{Binding Path=ContentToArrowIndent, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentControl x:Name="PART_ArrowContent" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False">
                            <ContentControl.Content>
                                <dxb:BarSubItemArrowControl x:Name="PART_ArrowControl" Style="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=ArrowStyle}}" LinkContainerType="{Binding Path=ContainerType, RelativeSource={RelativeSource TemplatedParent}}" />
                            </ContentControl.Content>
                        </ContentControl>
                    </StackPanel>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            <dxb:PopupMenuBase x:Name="PART_Popup" Focusable="false" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarEditItemThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:BarEditItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=Margin}}" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" />
            <dxc:Items2Panel Style="{Binding Path=EditAndContentLayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="Left" FillContent2="True" IgnoreContent2HorizontalAlignment="False">
                <dxc:Items2Panel.Content1>
                    <dxc:Items2Panel Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="Left">
                        <dxc:Items2Panel.Content1>
                            <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                                <!--BEGIN WPF-->
                                    <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                                
                                <!--END WPF-->
                                <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                        RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                            </dxc:MeasurePixelSnapperContentControl>
                        </dxc:Items2Panel.Content1>
                        <dxc:Items2Panel.Content2>
                            <dxc:MeasurePixelSnapperContentControl SnapperType="Around" x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                                    <!--BEGIN WPF-->
                                <dxc:MeasurePixelSnapperContentControl.Template>
                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                            <ContentPresenter RecognizesAccessKey="True" />
                                        </ControlTemplate>
                                </dxc:MeasurePixelSnapperContentControl.Template>
                                    <!--END WPF-->
                            </dxc:MeasurePixelSnapperContentControl>
                        </dxc:Items2Panel.Content2>
                    </dxc:Items2Panel>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <dxc:Items2Panel HorizontalIndent="4" HorizontalAlignment="{TemplateBinding ActualHorizontalEditAlignment}">
                        <dxc:Items2Panel.Content1>
                            <dxc:MeasurePixelSnapperContentControl x:Name="PART_EditContent" SnapperType="Around" Height="{TemplateBinding ActualEditHeight}" Width="{TemplateBinding ActualEditWidth}" Style="{Binding Path=NormalEditStyle, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualEditTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False" />
                        </dxc:Items2Panel.Content1>
                        <dxc:Items2Panel.Content2>
                            <dxc:MeasurePixelSnapperContentControl SnapperType="Around" Visibility="{TemplateBinding ActualContent2Visibility}" x:Name="PART_Content2" Content="{TemplateBinding ActualContent2}" ContentTemplate="{TemplateBinding ActualContent2Template}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False" />
                        </dxc:Items2Panel.Content2>
                    </dxc:Items2Panel>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarStaticItemThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:BarStaticItemLinkControl}">
        <Grid x:Name="PART_Item" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=Margin}}" MinWidth="{TemplateBinding ActualMinWidth}" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" />
            <Border Background="Transparent" Padding="1" MinHeight="22" IsHitTestVisible="False">
                <ContentControl x:Name="PART_Border" Template="{DynamicResource {dxbt:BarStaticItemThemeKey ResourceKey=BorderTemplate}}" Focusable="False" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" IsTabStop="False" />
            </Border>
            <Border x:Name="ContentBorder" ClipToBounds="True">
                <dxc:Items2Panel Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding ActualContentAlignment}">
                    <dxc:Items2Panel.Content1>
                        <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                            <!--BEGIN WPF-->
                                <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                            
                            <!--END WPF-->
                            <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                   RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                        </dxc:MeasurePixelSnapperContentControl>
                    </dxc:Items2Panel.Content1>
                    <dxc:Items2Panel.Content2>
                        <dxc:MeasurePixelSnapperContentControl SnapperType="Around" x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding ActualContentAlignment}" Visibility="{TemplateBinding ActualContentVisibility}" IsHitTestVisible="True" Focusable="False" IsTabStop="False">
                            <!--BEGIN WPF-->
                            <dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                                    <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                            </dxc:MeasurePixelSnapperContentControl.ContentTemplateSelector>
                            <dxc:MeasurePixelSnapperContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <ContentPresenter RecognizesAccessKey="True" />
                                    </ControlTemplate>
                            </dxc:MeasurePixelSnapperContentControl.Template>
                            <!--END WPF-->
                        </dxc:MeasurePixelSnapperContentControl>
                    </dxc:Items2Panel.Content2>
                </dxc:Items2Panel>
            </Border>
            
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="WidthState">
                    <VisualState x:Name="HasWidth">
                    </VisualState>
                    <VisualState x:Name="NoWidth">
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
  

    <ControlTemplate x:Key="{dxbt:BarButtonItemThemeKey ResourceKey=InMenuTemplate}" TargetType="{x:Type dxb:BarButtonItemLinkControl}">
        <Grid x:Name="PART_Item" Margin="1" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Padding="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuClientPadding}}" Background="Transparent">
                <dxb:ItemContentPanel>
                    <dxc:MeasurePixelSnapperContentControl Margin="{Binding Path=LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" x:Name="PART_GlyphBorder" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                        <!--BEGIN WPF-->
                            <dxc:DXImage Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}"/>
                        ONLY SL-->
                    </dxc:MeasurePixelSnapperContentControl>
                    <StackPanel x:Name="PART_ContentAndDescription" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}}">
                        <ContentControl Name="PART_Content" VerticalAlignment="Center" HorizontalAlignment="Left" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False">
                            <!--BEGIN WPF-->
                            <ContentControl.ContentTemplateSelector>
                                <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                            </ContentControl.ContentTemplateSelector>
                            <ContentControl.Template>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <ContentPresenter RecognizesAccessKey="True" />
                                </ControlTemplate>
                            </ContentControl.Template>
                            <!--END WPF-->
                        </ContentControl>
                        <ContentControl Name="PART_Description" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="Collapsed" Content="{TemplateBinding ActualDescription}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalDescriptionStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False" />
                    </StackPanel>
                        <ContentControl Name="PART_KeyGesture" dxb:ItemContentPanel.Alignment="Far" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}}" Content="{TemplateBinding ActualKeyGestureText}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" Focusable="False" IsTabStop="False" />
                </dxb:ItemContentPanel>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="KeyGestureVisibility">
                    <VisualState x:Name="KeyGestureVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_KeyGesture" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DescriptionVisibility">
                    <VisualState x:Name="DescriptionVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Stretch" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DescriptionHidden">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Center" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=InMenuTemplate}" TargetType="{x:Type dxb:BarCheckItemLinkControl}">
        <Grid x:Name="PART_Item" Margin="1" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Padding="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuClientPadding}}" Background="Transparent">
                <dxb:ItemContentPanel>
                    <Border Margin="{Binding Path=LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" Background="Transparent">
                        <Grid FlowDirection="LeftToRight" MinWidth="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" Margin="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=BorderMarginInMenu}}" HorizontalAlignment="Center">
                            <ContentControl x:Name="PART_TriStateGlyph" Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Center" Template="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=TriStateBorderInMenu}}" />
                            <ContentControl x:Name="PART_CheckGlyph" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" Template="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=CheckInMenu}}" />
                            <ContentControl x:Name="PART_GlyphCheckBorder" Opacity="0" Template="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=GlyphCheckBorderInMenu}}" VerticalAlignment="Center">
                                <Border Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" />
                            </ContentControl>
                            <ContentControl x:Name="PART_GlyphTriStateBorder" Opacity="0" Template="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=GlyphTriStateBorderInMenu}}" VerticalAlignment="Center">
                                <Border Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" />
                            </ContentControl>
                            <!--BEGIN WPF-->
                                <dxc:DXImage Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}" />                            
                            <!--END WPF-->
                            <!--ONLY SL
                        <Image Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}"/>
                        ONLY SL-->
                        </Grid>
                    </Border>
                    <StackPanel x:Name="PART_ContentAndDescription" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}}">
                        <dxc:MeasurePixelSnapper SnapperType="Around">
                            <ContentControl Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Left" Focusable="False" IsTabStop="False">
                                <!--BEGIN WPF-->
                                <ContentControl.ContentTemplateSelector>
                                    <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ContentControl.ContentTemplateSelector>
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <ContentPresenter RecognizesAccessKey="True" />
                                    </ControlTemplate>
                                </ContentControl.Template>
                                <!--END WPF-->
                            </ContentControl>
                        </dxc:MeasurePixelSnapper>
                        <dxc:MeasurePixelSnapper SnapperType="Around">
                            <ContentControl Name="PART_Description" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="Collapsed" Content="{TemplateBinding ActualDescription}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalDescriptionStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False" />
                        </dxc:MeasurePixelSnapper>
                    </StackPanel>
                    <dxc:MeasurePixelSnapper SnapperType="Around">
                        <ContentControl Name="PART_KeyGesture" dxb:ItemContentPanel.Alignment="Far" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}}" Content="{TemplateBinding ActualKeyGestureText}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" Focusable="False" IsTabStop="False" />
                    </dxc:MeasurePixelSnapper>
                </dxb:ItemContentPanel>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_GlyphCheckBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#00FFFFFF" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_GlyphTriStateBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#00FFFFFF" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_GlyphCheckBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#00FFFFFF" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_GlyphTriStateBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#00FFFFFF" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="KeyGestureVisibility">
                    <VisualState x:Name="KeyGestureVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_KeyGesture" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DescriptionVisibility">
                    <VisualState x:Name="DescriptionVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Stretch" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DescriptionHidden">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Center" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="TriStateBorderVisibility">
                    <VisualState x:Name="TriStateBorderVisible">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_TriStateGlyph" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="TriStateBorderHidden">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_TriStateGlyph" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckVisibility">
                    <VisualState x:Name="CheckVisible">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_CheckGlyph" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="CheckHidden">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_CheckGlyph" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="TriStateGlyphBorderVisibility">
                    <VisualState x:Name="TriStateGlyphBorderVisible">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_GlyphTriStateBorder" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="TriStateGlyphBorderHidden">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_GlyphTriStateBorder" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="GlyphCheckVisibility">
                    <VisualState x:Name="GlyphCheckVisible">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_GlyphCheckBorder" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="GlyphCheckHidden">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_GlyphCheckBorder" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarStaticItemThemeKey ResourceKey=InMenuTemplate}" TargetType="{x:Type dxb:BarStaticItemLinkControl}">
        <Grid x:Name="PART_Item" Margin="1" Background="Transparent" MinWidth="{TemplateBinding ActualMinWidth}" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Padding="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuClientPadding}}" Background="Transparent">
                <dxb:ItemContentPanel>
                    <dxc:MeasurePixelSnapperContentControl Margin="{Binding Path=LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" x:Name="PART_GlyphBorder" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                        <!--BEGIN WPF-->
                            <dxc:DXImage Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}"/>
                        ONLY SL-->
                    </dxc:MeasurePixelSnapperContentControl>
                    <StackPanel x:Name="PART_ContentAndDescription" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}}">
                        <dxc:MeasurePixelSnapper SnapperType="Around">
                            <ContentControl Name="PART_Content" VerticalAlignment="Center" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding ActualContentAlignment}" Focusable="False" IsTabStop="False">
                                <!--BEGIN WPF-->
                                <ContentControl.ContentTemplateSelector>
                                    <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ContentControl.ContentTemplateSelector>
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <ContentPresenter RecognizesAccessKey="True" />
                                    </ControlTemplate>
                                </ContentControl.Template>
                                <!--END WPF-->
                            </ContentControl>
                        </dxc:MeasurePixelSnapper>
                        <dxc:MeasurePixelSnapper SnapperType="Around">
                            <ContentControl Name="PART_Description" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="Collapsed" Content="{TemplateBinding ActualDescription}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalDescriptionStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False" />
                        </dxc:MeasurePixelSnapper>
                    </StackPanel>
                    <dxc:MeasurePixelSnapper SnapperType="Around">
                        <ContentControl Name="PART_KeyGesture" dxb:ItemContentPanel.Alignment="Far" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}}" Content="{TemplateBinding ActualKeyGestureText}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" Focusable="False" IsTabStop="False" />
                    </dxc:MeasurePixelSnapper>
                </dxb:ItemContentPanel>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="KeyGestureVisibility">
                    <VisualState x:Name="KeyGestureVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_KeyGesture" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DescriptionVisibility">
                    <VisualState x:Name="DescriptionVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Stretch" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DescriptionHidden">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Center" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="WidthState">
                    <VisualState x:Name="HasWidth">
                    </VisualState>
                    <VisualState x:Name="NoWidth">
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarSubItemThemeKey ResourceKey=InMenuTemplate}" TargetType="{x:Type dxb:BarSubItemLinkControl}">
        <Grid x:Name="PART_Item" Margin="1" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Padding="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuClientPadding}}" Background="Transparent">
                <dxb:ItemContentPanel>
                    <Border Margin="{Binding Path=LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" Background="Transparent">
                        <!--BEGIN WPF-->
                            <dxc:DXImage Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}"/>
                        ONLY SL-->
                    </Border>
                    <StackPanel x:Name="PART_ContentAndDescription" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}}">
                        <dxc:MeasurePixelSnapper SnapperType="Around">
                            <ContentControl Name="PART_Content" VerticalAlignment="Center" HorizontalAlignment="Left" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False">
                                <!--BEGIN WPF-->
                                <ContentControl.ContentTemplateSelector>
                                    <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ContentControl.ContentTemplateSelector>
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <ContentPresenter RecognizesAccessKey="True" />
                                    </ControlTemplate>
                                </ContentControl.Template>
                                <!--END WPF-->
                            </ContentControl>
                        </dxc:MeasurePixelSnapper>
                        <dxc:MeasurePixelSnapper SnapperType="Around">
                            <ContentControl Name="PART_Description" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="Collapsed" Content="{TemplateBinding ActualDescription}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalDescriptionStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False" />
                        </dxc:MeasurePixelSnapper>
                    </StackPanel>
                    <dxc:MeasurePixelSnapper SnapperType="Around">
                        <ContentControl Name="PART_KeyGesture" dxb:ItemContentPanel.Alignment="Far" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}}" Content="{TemplateBinding ActualKeyGestureText}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" />
                    </dxc:MeasurePixelSnapper>
                    <ContentControl Name="PART_ArrowContent" dxb:ItemContentPanel.Alignment="Far" Margin="0,0,2,0" HorizontalAlignment="Right" VerticalAlignment="Center" Focusable="False" IsTabStop="False">
                        <ContentControl.Content>
                            <dxb:BarSubItemArrowControl x:Name="PART_ArrowControl" Style="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=ArrowStyle}}" LinkContainerType="{Binding Path=ContainerType, RelativeSource={RelativeSource TemplatedParent}}" />
                        </ContentControl.Content>
                    </ContentControl>
                </dxb:ItemContentPanel>
            </Border>
            <!--ONLY SL<ContentControl Height="0" Width="0"> ONLY SL-->
              <dxb:PopupMenuBase x:Name="PART_Popup" Focusable="false" DefaultVerticalOffset="-1" />
            <!--ONLY SL</ContentControl> ONLY SL-->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="KeyGestureVisibility">
                    <VisualState x:Name="KeyGestureVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_KeyGesture" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DescriptionVisibility">
                    <VisualState x:Name="DescriptionVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Stretch" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DescriptionHidden">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Center" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarSplitButtonItemThemeKey ResourceKey=InMenuTemplate}" TargetType="{x:Type dxb:BarSplitButtonItemLinkControl}">
        <Grid Margin="1" x:Name="PART_Item" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ControlBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}" />
            <dxb:ItemBorderControl Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" x:Name="PART_CustomizationBorder" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid>
                    <dxb:ItemBorderControl x:Name="PART_ItemBorder" Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" />
                    <Border Background="#00FFFFFF" Padding="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuClientPadding}}">
                        <dxb:ItemContentPanel>
                            <Border Margin="{Binding Path=LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" Background="Transparent">
                                <!--BEGIN WPF-->
                                    <dxc:DXImage Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}" />                                
                                <!--END WPF-->
                                <!--ONLY SL
                        <Image Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}"/>
                        ONLY SL-->
                            </Border>
                            <StackPanel x:Name="PART_ContentAndDescription" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}}">
                                <dxc:MeasurePixelSnapper SnapperType="Around">
                                    <ContentControl Name="PART_Content" VerticalAlignment="Center" HorizontalAlignment="Left" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False">
                                        <!--BEGIN WPF-->
                                        <ContentControl.ContentTemplateSelector>
                                            <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </ContentControl.ContentTemplateSelector>
                                        <ContentControl.Template>
                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                <ContentPresenter RecognizesAccessKey="True" />
                                            </ControlTemplate>
                                        </ContentControl.Template>
                                        <!--END WPF-->
                                    </ContentControl>
                                </dxc:MeasurePixelSnapper>
                                <dxc:MeasurePixelSnapper SnapperType="Around">
                                    <ContentControl Name="PART_Description" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="Collapsed" Content="{TemplateBinding ActualDescription}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalDescriptionStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False" />
                                </dxc:MeasurePixelSnapper>
                            </StackPanel>
                            <dxc:MeasurePixelSnapper SnapperType="Around">
                                <ContentControl Name="PART_KeyGesture" dxb:ItemContentPanel.Alignment="Far" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}}" Content="{TemplateBinding ActualKeyGestureText}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" Focusable="False" IsTabStop="False" />
                            </dxc:MeasurePixelSnapper>
                        </dxb:ItemContentPanel>
                    </Border>
                </Grid>
                <Grid HorizontalAlignment="Right" x:Name="PART_ArrowButton" Grid.Column="1">
                    <dxb:ItemBorderControl x:Name="PART_ArrowBorder" Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" />
                    <ContentControl x:Name="PART_ArrowContent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Focusable="False" IsTabStop="False">
                        <ContentControl.Content>
                            <dxb:BarSplitButtonItemArrowControl x:Name="PART_ArrowControl" />
                        </ContentControl.Content>
                    </ContentControl>
                </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="KeyGestureVisibility">
                    <VisualState x:Name="KeyGestureVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_KeyGesture" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DescriptionVisibility">
                    <VisualState x:Name="DescriptionVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Stretch" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DescriptionHidden">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Center" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ArrowAlignment">
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Right" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Left" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoArrow">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowButton" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Left" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Thickness x:Key="{dxbt:BarEditItemThemeKey ResourceKey=InMenuClientPadding}">0</Thickness>

    <ControlTemplate x:Key="{dxbt:BarEditItemThemeKey ResourceKey=InMenuTemplate}" TargetType="{x:Type dxb:BarEditItemLinkControl}">
        <Grid x:Name="PART_Item" Margin="1" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Padding="{DynamicResource {dxbt:BarEditItemThemeKey ResourceKey=InMenuClientPadding}}" Background="Transparent">
                <dxb:ItemContentPanel>
                    <dxc:MeasurePixelSnapperContentControl Margin="{Binding Path=LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" x:Name="PART_GlyphBorder" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                        <!--BEGIN WPF-->
                            <dxc:DXImage Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}"/>
                        ONLY SL-->
                    </dxc:MeasurePixelSnapperContentControl>
                    <dxc:MeasurePixelSnapper SnapperType="Around">
                        <ContentControl Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}}" Focusable="False" IsTabStop="False">
                            <!--BEGIN WPF-->
                            <ContentControl.Template>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <ContentPresenter RecognizesAccessKey="True" />
                                </ControlTemplate>
                            </ContentControl.Template>
                            <!--END WPF-->
                        </ContentControl>
                    </dxc:MeasurePixelSnapper>
                    <dxc:MeasurePixelSnapper SnapperType="Around">
                        <dxc:Items2Panel HorizontalIndent="4">
                            <dxc:Items2Panel.Content1>
                                <ContentControl x:Name="PART_EditContent" Style="{Binding Path=NormalEditStyle, RelativeSource={RelativeSource TemplatedParent}}" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}}" Content="{Binding Path=Edit, RelativeSource={RelativeSource TemplatedParent}}" Width="{TemplateBinding ActualEditWidth}" />
                            </dxc:Items2Panel.Content1>
                            <dxc:Items2Panel.Content2>
                                <dxc:MeasurePixelSnapper SnapperType="Around" Visibility="{TemplateBinding ActualContent2Visibility}">
                                    <ContentControl Name="PART_Content2" Content="{TemplateBinding ActualContent2}" ContentTemplate="{TemplateBinding ActualContent2Template}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False" />
                                </dxc:MeasurePixelSnapper>
                            </dxc:Items2Panel.Content2>
                        </dxc:Items2Panel>
                    </dxc:MeasurePixelSnapper>
                    <dxc:MeasurePixelSnapper SnapperType="Around">
                        <ContentControl Name="PART_KeyGesture" dxb:ItemContentPanel.Alignment="Far" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}}" Content="{TemplateBinding ActualKeyGestureText}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" />
                    </dxc:MeasurePixelSnapper>
                </dxb:ItemContentPanel>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="KeyGestureVisibility">
                    <VisualState x:Name="KeyGestureVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_KeyGesture" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarSplitButtonItemThemeKey ResourceKey=InPageGroupTemplate}" TargetType="{x:Type dxb:BarSplitButtonItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ControlBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}" />
            <dxb:ItemBorderControl x:Name="PART_CustomizationBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel x:Name="itemPanel" FillContent1="True" Style="{Binding Path=ContentAndArrowLayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualArrowAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxc:Items2Panel.Content1>
                    <Grid Name="PART_ArrowButton" Grid.Row="1" Background="Transparent">
                        <Grid Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                            <dxb:ItemBorderControl x:Name="PART_ArrowBorder" Style="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=BorderStyleInRibbonPageGroup}}" HideBorderSide="None" IsHitTestVisible="False" Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}" />
                            <dxb:ItemBorderControl x:Name="PART_LargeArrowBorder" IsActive="{TemplateBinding IsArrowBorderActive}" State="{TemplateBinding ArrowBorderState}" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=LargeArrowBorderStyleInRibbonPageGroup}}" HideBorderSide="None" IsHitTestVisible="False" Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}" />
                        </Grid>
                        <Border Background="Transparent" Visibility="{Binding Path=ShowContentInArrow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                            <ContentControl x:Name="PART_ArrowContent" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Focusable="False" IsTabStop="False">
                                <ContentControl.Content>
                                    <dxb:BarSplitButtonItemArrowControl x:Name="PART_ArrowControl" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowStyle}}" />
                                </ContentControl.Content>
                            </ContentControl>
                        </Border>
                        <dxc:MeasurePixelSnapper x:Name="PART_ContentInArrow" HorizontalAlignment="Stretch" SnapperType="Around" Visibility="{Binding Path=ShowContentInArrow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}">
                            <dxb:TextSplitterControl Content="{TemplateBinding ActualContent}" IsSelected="{TemplateBinding IsMouseOver}" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=TextSplitterStyleInRibbonPageGroup}}" NormalArrowTemplate="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=NormalArrowTemplateInTextSplitter}}" SelectedArrowTemplate="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=SelectedArrowTemplateInTextSplitter}}" NormalTextStyle="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=NormalTextStyleInTextSplitter}}" SelectedTextStyle="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=SelectedTextStyleInTextSplitter}}" BottomSideArrowContainerStyle="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=BottomSideArrowContainerStyleInTextSplitter}}" RightSideArrowContainerStyle="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=RightSideArrowContainerStyleInTextSplitter}}" Visibility="{TemplateBinding ActualContentVisibility}" SplitMethod="BySpace" IsArrowVisible="True" />
                        </dxc:MeasurePixelSnapper>
                    </Grid>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <Grid>
                        <Grid Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=BorderStyleInRibbonPageGroup}}" HideBorderSide="None" Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}" />
                            <dxb:ItemBorderControl x:Name="PART_LargeItemBorder" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=LargeContentBorderStyleInRibbonPageGroup}}" IsActive="{TemplateBinding IsContentBorderActive}" State="{TemplateBinding ContentBorderState}" HideBorderSide="None" Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}" />
                        </Grid>
                        <dxc:Items2Panel Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:Items2Panel.Content1>
                                <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                                    <!--BEGIN WPF-->
                                        <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                                    
                                    <!--END WPF-->
                                    <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                                RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                                </dxc:MeasurePixelSnapperContentControl>
                            </dxc:Items2Panel.Content1>
                            <dxc:Items2Panel.Content2>
                                <dxc:MeasurePixelSnapper SnapperType="Around" Visibility="{Binding Path=ShowContentInArrow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                                    <ContentControl x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                                        <!--BEGIN WPF-->
                                        <ContentControl.ContentTemplateSelector>
                                            <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </ContentControl.ContentTemplateSelector>
                                        <!--END WPF-->
                                    </ContentControl>
                                </dxc:MeasurePixelSnapper>
                            </dxc:Items2Panel.Content2>
                        </dxc:Items2Panel>
                    </Grid>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ArrowAlignment">
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Bottom" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Top" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LargeArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Top" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LargeItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Bottom" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Right" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Left" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoArrow">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowButton" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="ArrowHot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="ArrowPressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarSubItemThemeKey ResourceKey=InRibbonPageGroupTemplate}" TargetType="{x:Type dxb:BarSubItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" ItemPosition="{Binding Path=(dxb:ItemPositionTypeProvider.HorizontalItemPosition), RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxc:Items2Panel.Content1>
                    <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Top" IsTabStop="False">
                        <!--BEGIN WPF-->
                            <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                                RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                    </dxc:MeasurePixelSnapperContentControl>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <dxb:ContentSelector SnapperType="Around" SelectedIndex="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToIntegerConverter}}">
                        <dxb:ContentSelector.Content1>
                            <Grid Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentControl x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                                    <!--BEGIN WPF-->
                                    <ContentControl.ContentTemplateSelector>
                                        <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </ContentControl.ContentTemplateSelector>
                                    <!--END WPF-->
                                </ContentControl>
                                <Border Grid.Column="1" x:Name="PART_ContentToArrowIndent" Width="{Binding Path=ContentToArrowIndent, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentControl Grid.Column="2" x:Name="PART_ArrowContent" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                                    <ContentControl.Content>
                                        <dxb:BarSubItemArrowControl x:Name="PART_ArrowControl" Style="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=ArrowStyle}}" LinkContainerType="{Binding Path=ContainerType, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </ContentControl.Content>
                                </ContentControl>
                            </Grid>
                        </dxb:ContentSelector.Content1>
                        <dxb:ContentSelector.Content2>
                            <dxb:TextSplitterControl Content="{TemplateBinding ActualContent}" IsSelected="{TemplateBinding IsMouseOver}" Style="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=TextSplitterStyleInRibbonPageGroup}}" NormalArrowTemplate="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=NormalArrowTemplateInTextSplitter}}" SelectedArrowTemplate="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=SelectedArrowTemplateInTextSplitter}}" NormalTextStyle="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=NormalTextStyleInTextSplitter}}" SelectedTextStyle="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=SelectedTextStyleInTextSplitter}}" BottomSideArrowContainerStyle="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=BottomSideArrowContainerStyleInTextSplitter}}" RightSideArrowContainerStyle="{DynamicResource {dxbt:BarSubItemThemeKey ResourceKey=RightSideArrowContainerStyleInTextSplitter}}" Visibility="{TemplateBinding ActualContentVisibility}" SplitMethod="BySpace" IsArrowVisible="True" />
                        </dxb:ContentSelector.Content2>
                    </dxb:ContentSelector>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>            
            <dxb:PopupMenuBase x:Name="PART_Popup" Focusable="false" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=InRibbonPageGroupTemplate}" TargetType="{x:Type dxb:BarCheckItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" ItemPosition="{Binding Path=(dxb:ItemPositionTypeProvider.HorizontalItemPosition), RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxc:Items2Panel.Content1>
                    <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Top">
                        <!--BEGIN WPF-->
                            <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                        
                        <!--END WPF-->
                        <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                   RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                    </dxc:MeasurePixelSnapperContentControl>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <dxb:ContentSelector SnapperType="Around" SelectedIndex="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToIntegerConverter}}">
                        <dxb:ContentSelector.Content1>
                            <ContentControl x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                                <!--BEGIN WPF-->
                                <ContentControl.ContentTemplateSelector>
                                    <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ContentControl.ContentTemplateSelector>
                                <!--END WPF-->
                            </ContentControl>
                        </dxb:ContentSelector.Content1>
                        <dxb:ContentSelector.Content2>
                            <dxb:TextSplitterControl Content="{TemplateBinding ActualContent}" IsSelected="{TemplateBinding IsMouseOver}" Style="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=TextSplitterStyleInRibbonPageGroup}}" NormalTextStyle="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=NormalTextStyleInTextSplitter}}" SelectedTextStyle="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=SelectedTextStyleInTextSplitter}}" Visibility="{TemplateBinding ActualContentVisibility}" SplitMethod="BySpace" IsArrowVisible="False" />
                        </dxb:ContentSelector.Content2>
                    </dxb:ContentSelector>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ItemCheckState">
                    <VisualState x:Name="ItemChecked" />
                    <VisualState x:Name="ItemUnchecked" />
                    <VisualState x:Name="ItemIndeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    
    <dxc:BoolToDoubleConverter TrueValue="1.0" x:Key="booleanToOpacityConverter" />
    <ControlTemplate x:Key="{dxbt:BarSplitCheckItemThemeKey ResourceKey=InPageGroupTemplate}" TargetType="{x:Type dxb:BarSplitCheckItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ControlBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}" />
            <dxb:ItemBorderControl x:Name="PART_CustomizationBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel x:Name="itemPanel" FillContent1="True" Style="{Binding Path=ContentAndArrowLayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualArrowAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxc:Items2Panel.Content1>
                    <Grid Name="PART_ArrowButton" Grid.Row="1" Background="Transparent">
                        <Grid Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                            <dxb:ItemBorderControl x:Name="PART_ArrowBorder" Style="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=BorderStyleInRibbonPageGroup}}" HideBorderSide="None" IsHitTestVisible="False" Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}" />
                            <dxb:ItemBorderControl x:Name="PART_LargeArrowBorder" IsActive="{TemplateBinding IsArrowBorderActive}" State="{TemplateBinding ArrowBorderState}" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=LargeArrowBorderStyleInRibbonPageGroup}}" HideBorderSide="None" IsHitTestVisible="False" Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}" />
                        </Grid>
                        <Border Background="Transparent" Visibility="{Binding Path=ShowContentInArrow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                            <ContentControl x:Name="PART_ArrowContent" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Focusable="False">
                                <ContentControl.Content>
                                    <dxb:BarSplitButtonItemArrowControl x:Name="PART_ArrowControl" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowStyle}}" />
                                </ContentControl.Content>
                            </ContentControl>
                        </Border>
                        <dxc:MeasurePixelSnapper x:Name="PART_ContentInArrow" HorizontalAlignment="Center" SnapperType="Around" Visibility="{Binding Path=ShowContentInArrow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}">
                            <dxb:TextSplitterControl Content="{TemplateBinding ActualContent}" IsSelected="{TemplateBinding IsMouseOver}" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=TextSplitterStyleInRibbonPageGroup}}" NormalArrowTemplate="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=NormalArrowTemplateInTextSplitter}}" SelectedArrowTemplate="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=SelectedArrowTemplateInTextSplitter}}" NormalTextStyle="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=NormalTextStyleInTextSplitter}}" SelectedTextStyle="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=SelectedTextStyleInTextSplitter}}" BottomSideArrowContainerStyle="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=BottomSideArrowContainerStyleInTextSplitter}}" RightSideArrowContainerStyle="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=RightSideArrowContainerStyleInTextSplitter}}" Visibility="{TemplateBinding ActualContentVisibility}" SplitMethod="BySpace" IsArrowVisible="True" />
                        </dxc:MeasurePixelSnapper>
                    </Grid>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <Grid>
                        <Grid Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                            <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=BorderStyleInRibbonPageGroup}}" HideBorderSide="None" Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}" />
                            <dxb:ItemBorderControl x:Name="PART_LargeItemBorder" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=LargeContentBorderStyleInRibbonPageGroup}}" IsActive="{TemplateBinding IsContentBorderActive}" State="{TemplateBinding ContentBorderState}" HideBorderSide="None" Visibility="{Binding Path=IsRibbonStyleLarge, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}" />
                        </Grid>
                        <dxc:Items2Panel Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:Items2Panel.Content1>
                                <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                                    <!--BEGIN WPF-->
                                        <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                                    
                                    <!--END WPF-->
                                    <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                                RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                                </dxc:MeasurePixelSnapperContentControl>
                            </dxc:Items2Panel.Content1>
                            <dxc:Items2Panel.Content2>
                                <dxc:MeasurePixelSnapper SnapperType="Around" Visibility="{Binding Path=ShowContentInArrow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                                    <ContentControl x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                                        <!--BEGIN WPF-->
                                        <ContentControl.ContentTemplateSelector>
                                            <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </ContentControl.ContentTemplateSelector>
                                        <!--END WPF-->
                                    </ContentControl>
                                </dxc:MeasurePixelSnapper>
                            </dxc:Items2Panel.Content2>
                        </dxc:Items2Panel>
                    </Grid>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ArrowAlignment">
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Bottom" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Top" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LargeArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Top" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LargeItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Bottom" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Right" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Left" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoArrow">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowButton" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="ArrowHot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="ArrowPressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxbt:BarSplitCheckItemThemeKey ResourceKey=InMenuTemplate}" TargetType="{x:Type dxb:BarSplitCheckItemLinkControl}">
        <Grid Margin="1" x:Name="PART_Item" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_ControlBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notInvertedBooleanToVisibilityConverter}}" />
            <dxb:ItemBorderControl Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" x:Name="PART_CustomizationBorder" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid>
                    <dxb:ItemBorderControl x:Name="PART_ItemBorder" Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" />
                    <Border Background="#00FFFFFF" Padding="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuClientPadding}}">
                        <dxb:ItemContentPanel>
                            <Border Margin="{Binding Path=LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" Background="Transparent">
                                <Grid MinWidth="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" HorizontalAlignment="Center" Margin="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=BorderMarginInMenu}}">
                                    <ContentControl x:Name="PART_TriStateGlyph" Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Center" Template="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=TriStateBorderInMenu}}" />
                                    <ContentControl x:Name="PART_CheckGlyph" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" Template="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=CheckInMenu}}" />
                                    <ContentControl x:Name="PART_GlyphCheckBorder" Opacity="0" Template="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=GlyphCheckBorderInMenu}}" VerticalAlignment="Center">
                                        <Border Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" />
                                    </ContentControl>
                                    <ContentControl x:Name="PART_GlyphTriStateBorder" Opacity="0" Template="{DynamicResource {dxbt:BarCheckItemThemeKey ResourceKey=GlyphTriStateBorderInMenu}}" VerticalAlignment="Center">
                                        <Border Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxb:IsLargeGlyphToDoubleConverter}}" />
                                    </ContentControl>
                                    <!--BEGIN WPF-->
                                        <dxc:DXImage Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}" />                                    
                                    <!--END WPF-->
                                    <!--ONLY SL
                        <Image Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualGlyphVisibility}"/>
                        ONLY SL-->
                                </Grid>
                            </Border>
                            <StackPanel x:Name="PART_ContentAndDescription" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}}">
                                <dxc:MeasurePixelSnapper SnapperType="Around">
                                    <ContentControl Name="PART_Content" VerticalAlignment="Center" HorizontalAlignment="Left" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False">
                                        <!--BEGIN WPF-->
                                        <ContentControl.ContentTemplateSelector>
                                            <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </ContentControl.ContentTemplateSelector>
                                        <ContentControl.Template>
                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                <ContentPresenter RecognizesAccessKey="True" />
                                            </ControlTemplate>
                                        </ContentControl.Template>
                                        <!--END WPF-->
                                    </ContentControl>
                                </dxc:MeasurePixelSnapper>
                                <dxc:MeasurePixelSnapper SnapperType="Around">
                                    <ContentControl Name="PART_Description" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="Collapsed" Content="{TemplateBinding ActualDescription}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalDescriptionStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False" />
                                </dxc:MeasurePixelSnapper>
                            </StackPanel>
                            <dxc:MeasurePixelSnapper SnapperType="Around">
                                <ContentControl Name="PART_KeyGesture" dxb:ItemContentPanel.Alignment="Far" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}}" Content="{TemplateBinding ActualKeyGestureText}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center" Focusable="False" IsTabStop="False" />
                            </dxc:MeasurePixelSnapper>
                        </dxb:ItemContentPanel>
                    </Border>
                </Grid>
                <Grid HorizontalAlignment="Right" x:Name="PART_ArrowButton" Grid.Column="1">
                    <dxb:ItemBorderControl x:Name="PART_ArrowBorder" Visibility="{Binding ActualActAsDropDown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertedBooleanToVisibilityConverter}}" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" />
                    <ContentControl x:Name="PART_ArrowContent" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False">
                        <ContentControl.Content>
                            <dxb:BarSplitButtonItemArrowControl x:Name="PART_ArrowControl" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowStyle}}" />
                        </ContentControl.Content>
                    </ContentControl>
                </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="KeyGestureVisibility">
                    <VisualState x:Name="KeyGestureVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_KeyGesture" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DescriptionVisibility">
                    <VisualState x:Name="DescriptionVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Stretch" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DescriptionHidden">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Description" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentAndDescription" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Center" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ArrowAlignment">
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Right" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Left" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoArrow">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowButton" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Left" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxbt:BarSplitCheckItemThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:BarSplitCheckItemLinkControl}">
        <Grid x:Name="PART_Item" Background="Transparent" Margin="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=Margin}}" SnapsToDevicePixels="True">
            <dxb:ItemBorderControl x:Name="PART_CustomizationBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxc:Items2Panel x:Name="itemPanel" Style="{Binding Path=ContentAndArrowLayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualArrowAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxc:Items2Panel.Content1>
                    <Grid Name="PART_ArrowButton">
                        <dxb:ItemBorderControl x:Name="PART_ArrowBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" ItemPosition="{TemplateBinding ArrowPartItemPosition}" />
                        <Border Background="Transparent">
                            <ContentControl x:Name="PART_ArrowContent" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch" Focusable="False" IsTabStop="False">
                                <ContentControl.Content>
                                    <dxb:BarSplitButtonItemArrowControl x:Name="PART_ArrowControl" Style="{DynamicResource {dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowStyle}}" />
                                </ContentControl.Content>
                            </ContentControl>
                        </Border>
                    </Grid>
                </dxc:Items2Panel.Content1>
                <dxc:Items2Panel.Content2>
                    <Grid>
                        <dxb:ItemBorderControl x:Name="PART_ItemBorder" Style="{Binding Path=BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" HideBorderSide="None" ItemPosition="{TemplateBinding ContentPartItemPosition}" />
                        <dxc:Items2Panel Style="{Binding Path=LayoutPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" Alignment="{Binding Path=ActualGlyphAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:Items2Panel.Content1>
                                <dxc:MeasurePixelSnapperContentControl x:Name="PART_GlyphBorder" Visibility="{TemplateBinding ActualGlyphVisibility}" Width="{Binding Path=LinksControl.MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=LinksControl.MaxGlyphSize.Height, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
                                    <!--BEGIN WPF-->
                                        <dxc:DXImage x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}" />                                    
                                    <!--END WPF-->
                                    <!--ONLY SL
                        <Image x:Name="PART_Glyph" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="16" MinHeight="16" Source="{Binding Path=FrozenGlyph, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"
                                                RenderTransform="{Binding Path=GlyphRenderTransform, RelativeSource={RelativeSource TemplatedParent}}"/>
                        ONLY SL-->
                                </dxc:MeasurePixelSnapperContentControl>
                            </dxc:Items2Panel.Content1>
                            <dxc:Items2Panel.Content2>
                                <dxc:MeasurePixelSnapper SnapperType="Around">
                                    <ContentControl x:Name="PART_Content" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ActualContentTemplate}" Style="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ActualContentVisibility}" Focusable="False" IsTabStop="False">
                                        <!--BEGIN WPF-->
                                        <ContentControl.ContentTemplateSelector>
                                            <Binding Path="ActualContentTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </ContentControl.ContentTemplateSelector>
                                        <ContentControl.Template>
                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                <ContentPresenter RecognizesAccessKey="True" />
                                            </ControlTemplate>
                                        </ContentControl.Template>
                                        <!--END WPF-->
                                    </ContentControl>
                                </dxc:MeasurePixelSnapper>
                            </dxc:Items2Panel.Content2>
                        </dxc:Items2Panel>
                    </Grid>
                </dxc:Items2Panel.Content2>
            </dxc:Items2Panel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ArrowAlignment">
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Bottom" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Top" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Right" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="Left" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoArrow">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ItemBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowBorder" Storyboard.TargetProperty="HideBorderSide" dxcn:ValueSetter.HideBorderSide="None" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ArrowButton" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ItemState">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hot" />
                    <VisualState x:Name="ArrowHot" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="ArrowPressed" />
                    <VisualState x:Name="Customization" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Item" Storyboard.TargetProperty="Opacity" To="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>