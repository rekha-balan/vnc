/*
Deployment script for SQLMonitorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SQLMonitorDB"
:setvar DefaultFilePrefix "SQLMonitorDB"
:setvar DefaultDataPath "D:\Program Files\Microsoft SQL Server\MSSQL10_50.REL02\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Program Files\Microsoft SQL Server\MSSQL10_50.REL02\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
/*
The type for column JobID in table [dbo].[JSAlerts] is currently  INT NULL but is being changed to  UNIQUEIDENTIFIER NULL. There is no implicit or explicit conversion.

The type for column Severity in table [dbo].[JSAlerts] is currently  VARCHAR (256) NULL but is being changed to  INT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[JSAlerts])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[JSJobSchedules].[JobServer_ID] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[JSJobSchedules])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping DF__tmp_ms_xx_JS__ID__3335971A...';


GO
ALTER TABLE [dbo].[JSAlerts] DROP CONSTRAINT [DF__tmp_ms_xx_JS__ID__3335971A];


GO
PRINT N'Dropping DF__tmp_ms_xx__IsEna__3429BB53...';


GO
ALTER TABLE [dbo].[JSAlerts] DROP CONSTRAINT [DF__tmp_ms_xx__IsEna__3429BB53];


GO
PRINT N'Dropping DF__tmp_ms_xx_JS__ID__370627FE...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx_JS__ID__370627FE];


GO
PRINT N'Dropping DF__tmp_ms_xx__HasSc__37FA4C37...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx__HasSc__37FA4C37];


GO
PRINT N'Dropping DF__tmp_ms_xx__HasSe__38EE7070...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx__HasSe__38EE7070];


GO
PRINT N'Dropping DF__tmp_ms_xx__HasSt__39E294A9...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx__HasSt__39E294A9];


GO
PRINT N'Dropping DF__tmp_ms_xx__IsEna__3AD6B8E2...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx__IsEna__3AD6B8E2];


GO
PRINT N'Dropping DF__JSJobSchedul__ID__15A53433...';


GO
ALTER TABLE [dbo].[JSJobSchedules] DROP CONSTRAINT [DF__JSJobSchedul__ID__15A53433];


GO
PRINT N'Dropping DF__tmp_ms_xx__Defau__44952D46...';


GO
ALTER TABLE [dbo].[Servers] DROP CONSTRAINT [DF__tmp_ms_xx__Defau__44952D46];


GO
PRINT N'Dropping FK_JSAlerts_JobServers...';


GO
ALTER TABLE [dbo].[JSAlerts] DROP CONSTRAINT [FK_JSAlerts_JobServers];


GO
PRINT N'Dropping FK_JSJobs_JobServers...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [FK_JSJobs_JobServers];


GO
PRINT N'Dropping FK_JSJobs_Instances...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [FK_JSJobs_Instances];


GO
PRINT N'Dropping FK_JSJobSteps_JSJobs...';


GO
ALTER TABLE [dbo].[JSJobSteps] DROP CONSTRAINT [FK_JSJobSteps_JSJobs];


GO
PRINT N'Dropping FK_JSJobSchedules_JobServers...';


GO
ALTER TABLE [dbo].[JSJobSchedules] DROP CONSTRAINT [FK_JSJobSchedules_JobServers];


GO
PRINT N'Starting rebuilding table [dbo].[JSAlerts]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_JSAlerts] (
    [ID]                  UNIQUEIDENTIFIER DEFAULT (newid()) NOT NULL,
    [JobServer_ID]        UNIQUEIDENTIFIER NULL,
    [Name_JSAlert]        VARCHAR (256)    NULL,
    [AlertType]           VARCHAR (256)    NULL,
    [CategoryName]        VARCHAR (256)    NULL,
    [CountResetDate]      DATETIME2 (7)    NULL,
    [DatabaseName]        VARCHAR (256)    NULL,
    [IsEnabled]           BIT              DEFAULT 0 NULL,
    [JobID]               UNIQUEIDENTIFIER NULL,
    [JobName]             VARCHAR (256)    NULL,
    [LastOccurrenceDate]  DATETIME2 (7)    NULL,
    [LastResponseDate]    DATETIME2 (7)    NULL,
    [NotificationMessage] VARCHAR (256)    NULL,
    [OccurrenceCount]     INT              NULL,
    [Severity]            INT              NULL,
    [WmiEventNamespace]   VARCHAR (256)    NULL,
    [WmiEventQuery]       VARCHAR (256)    NULL,
    [SnapShotDate]        DATETIME         NULL,
    [SnapShotError]       VARCHAR (256)    NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_JSAlerts] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[JSAlerts])
    BEGIN
        
        INSERT INTO [dbo].[tmp_ms_xx_JSAlerts] ([ID], [JobServer_ID], [Name_JSAlert], [AlertType], [CategoryName], [CountResetDate], [DatabaseName], [IsEnabled], [JobID], [JobName], [LastOccurrenceDate], [LastResponseDate], [NotificationMessage], [OccurrenceCount], [Severity], [SnapShotDate], [SnapShotError])
        SELECT   [ID],
                 [JobServer_ID],
                 [Name_JSAlert],
                 [AlertType],
                 [CategoryName],
                 [CountResetDate],
                 [DatabaseName],
                 [IsEnabled],
                 [JobID],
                 [JobName],
                 [LastOccurrenceDate],
                 [LastResponseDate],
                 [NotificationMessage],
                 [OccurrenceCount],
                 [Severity],
                 [SnapShotDate],
                 [SnapShotError]
        FROM     [dbo].[JSAlerts]
        ORDER BY [ID] ASC;
        
    END

DROP TABLE [dbo].[JSAlerts];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_JSAlerts]', N'JSAlerts';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_JSAlerts]', N'PK_JSAlerts', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[JSJobs]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_JSJobs] (
    [ID]                     UNIQUEIDENTIFIER DEFAULT (newid()) NOT NULL,
    [JobServer_ID]           UNIQUEIDENTIFIER NULL,
    [Instance_ID]            UNIQUEIDENTIFIER NULL,
    [Name_Instance]          VARCHAR (256)    NULL,
    [Name_JSJob]             VARCHAR (256)    NULL,
    [Category]               VARCHAR (256)    NULL,
    [CurrentRunRetryAttempt] VARCHAR (256)    NULL,
    [CurrentRunStatus]       VARCHAR (256)    NULL,
    [DateCreated]            DATETIME2 (7)    NULL,
    [DateLastModified]       DATETIME2 (7)    NULL,
    [Description]            VARCHAR (256)    NULL,
    [HasSchedule]            BIT              DEFAULT 0 NULL,
    [HasServer]              BIT              DEFAULT 0 NULL,
    [HasStep]                BIT              DEFAULT 0 NULL,
    [IsEnabled]              BIT              DEFAULT 0 NULL,
    [JobType]                VARCHAR (256)    NULL,
    [LastRunDate]            DATETIME2 (7)    NULL,
    [LastRunOutcome]         VARCHAR (256)    NULL,
    [NextRunDate]            DATETIME2 (7)    NULL,
    [NextScheduleRunId]      INT              NULL,
    [OperatorsEmail]         VARCHAR (256)    NULL,
    [OriginatorsEmail]       VARCHAR (256)    NULL,
    [OwnerLoginName]         VARCHAR (256)    NULL,
    [StartStepID]            INT              NULL,
    [VersionNumber]          VARCHAR (256)    NULL,
    [SnapShotDate]           DATETIME         NULL,
    [SnapShotError]          VARCHAR (256)    NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_JSJobs] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[JSJobs])
    BEGIN
        
        INSERT INTO [dbo].[tmp_ms_xx_JSJobs] ([ID], [JobServer_ID], [Instance_ID], [Name_JSJob], [Category], [CurrentRunRetryAttempt], [CurrentRunStatus], [DateCreated], [DateLastModified], [Description], [HasSchedule], [HasServer], [HasStep], [IsEnabled], [JobType], [LastRunDate], [LastRunOutcome], [NextRunDate], [NextScheduleRunId], [OperatorsEmail], [OriginatorsEmail], [OwnerLoginName], [StartStepID], [VersionNumber], [SnapShotDate], [SnapShotError])
        SELECT   [ID],
                 [JobServer_ID],
                 [Instance_ID],
                 [Name_JSJob],
                 [Category],
                 [CurrentRunRetryAttempt],
                 [CurrentRunStatus],
                 [DateCreated],
                 [DateLastModified],
                 [Description],
                 [HasSchedule],
                 [HasServer],
                 [HasStep],
                 [IsEnabled],
                 [JobType],
                 [LastRunDate],
                 [LastRunOutcome],
                 [NextRunDate],
                 [NextScheduleRunId],
                 [OperatorsEmail],
                 [OriginatorsEmail],
                 [OwnerLoginName],
                 [StartStepID],
                 [VersionNumber],
                 [SnapShotDate],
                 [SnapShotError]
        FROM     [dbo].[JSJobs]
        ORDER BY [ID] ASC;
        
    END

DROP TABLE [dbo].[JSJobs];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_JSJobs]', N'JSJobs';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_JSJobs]', N'PK_JSJobs', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[JSJobSchedules]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_JSJobSchedules] (
    [ID]                         UNIQUEIDENTIFIER DEFAULT (newid()) NOT NULL,
    [JSJob_ID]                   UNIQUEIDENTIFIER NULL,
    [JSSharedSchedule_ID]        UNIQUEIDENTIFIER NULL,
    [Name_JSJobSchedule]         VARCHAR (256)    NULL,
    [ActiveEndDate]              DATETIME2 (7)    NULL,
    [ActiveEndTimeOfDay]         TIME (7)         NULL,
    [ActiveStartDate]            DATETIME2 (7)    NULL,
    [ActiveStartTimeOfDay]       TIME (7)         NULL,
    [DateCreated]                DATETIME2 (7)    NULL,
    [FrequencyTypes]             VARCHAR (50)     NULL,
    [FrequencyInterval]          VARCHAR (50)     NULL,
    [FrequencyRecurrenceFactor]  VARCHAR (50)     NULL,
    [FrequencyRelativeIntervals] VARCHAR (50)     NULL,
    [FrequencySubDayInterval]    VARCHAR (50)     NULL,
    [FrequencySubDayTypes]       VARCHAR (50)     NULL,
    [ID_JobSchedule]             INT              NULL,
    [IsEnabled]                  BIT              NULL,
    [JobCount]                   INT              NULL,
    [SnapShotDate]               DATETIME         NULL,
    [SnapShotError]              VARCHAR (256)    NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_JSJobSchedules] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[JSJobSchedules])
    BEGIN
        
        INSERT INTO [dbo].[tmp_ms_xx_JSJobSchedules] ([ID], [Name_JSJobSchedule], [ActiveEndDate], [ActiveEndTimeOfDay], [ActiveStartDate], [ActiveStartTimeOfDay], [DateCreated], [FrequencyTypes], [FrequencyInterval], [FrequencyRecurrenceFactor], [FrequencyRelativeIntervals], [FrequencySubDayInterval], [FrequencySubDayTypes], [ID_JobSchedule], [IsEnabled], [JobCount], [SnapShotDate], [SnapShotError])
        SELECT   [ID],
                 [Name_JSJobSchedule],
                 [ActiveEndDate],
                 [ActiveEndTimeOfDay],
                 [ActiveStartDate],
                 [ActiveStartTimeOfDay],
                 [DateCreated],
                 [FrequencyTypes],
                 [FrequencyInterval],
                 [FrequencyRecurrenceFactor],
                 [FrequencyRelativeIntervals],
                 [FrequencySubDayInterval],
                 [FrequencySubDayTypes],
                 [ID_JobSchedule],
                 [IsEnabled],
                 [JobCount],
                 [SnapShotDate],
                 [SnapShotError]
        FROM     [dbo].[JSJobSchedules]
        ORDER BY [ID] ASC;
        
    END

DROP TABLE [dbo].[JSJobSchedules];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_JSJobSchedules]', N'JSJobSchedules';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_JSJobSchedules]', N'PK_JSJobSchedules', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Servers]...';


GO
ALTER TABLE [dbo].[Servers] ALTER COLUMN [DefaultInstanceExpandMask] INT NULL;


GO
PRINT N'Creating Default Constraint on [dbo].[Servers]....';


GO
ALTER TABLE [dbo].[Servers]
    ADD DEFAULT 0 FOR [DefaultInstanceExpandMask];


GO
PRINT N'Creating FK_JSAlerts_JobServers...';


GO
ALTER TABLE [dbo].[JSAlerts] WITH NOCHECK
    ADD CONSTRAINT [FK_JSAlerts_JobServers] FOREIGN KEY ([JobServer_ID]) REFERENCES [dbo].[JobServers] ([ID]);


GO
PRINT N'Creating FK_JSJobs_JobServers...';


GO
ALTER TABLE [dbo].[JSJobs] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobs_JobServers] FOREIGN KEY ([JobServer_ID]) REFERENCES [dbo].[JobServers] ([ID]);


GO
PRINT N'Creating FK_JSJobs_Instances...';


GO
ALTER TABLE [dbo].[JSJobs] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobs_Instances] FOREIGN KEY ([Instance_ID]) REFERENCES [dbo].[Instances] ([ID]);


GO
PRINT N'Creating FK_JSJobSteps_JSJobs...';


GO
ALTER TABLE [dbo].[JSJobSteps] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobSteps_JSJobs] FOREIGN KEY ([JSJob_ID]) REFERENCES [dbo].[JSJobs] ([ID]);


GO
PRINT N'Creating FK_JSJobSchedules_JSJobs...';


GO
ALTER TABLE [dbo].[JSJobSchedules] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobSchedules_JSJobs] FOREIGN KEY ([JSJob_ID]) REFERENCES [dbo].[JSJobs] ([ID]);


GO
PRINT N'Creating FK_JSJobSchedules_JSSharedSchedules...';


GO
ALTER TABLE [dbo].[JSJobSchedules] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobSchedules_JSSharedSchedules] FOREIGN KEY ([JSSharedSchedule_ID]) REFERENCES [dbo].[JSSharedSchedules] ([ID]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[JSAlerts] WITH CHECK CHECK CONSTRAINT [FK_JSAlerts_JobServers];

ALTER TABLE [dbo].[JSJobs] WITH CHECK CHECK CONSTRAINT [FK_JSJobs_JobServers];

ALTER TABLE [dbo].[JSJobs] WITH CHECK CHECK CONSTRAINT [FK_JSJobs_Instances];

ALTER TABLE [dbo].[JSJobSteps] WITH CHECK CHECK CONSTRAINT [FK_JSJobSteps_JSJobs];

ALTER TABLE [dbo].[JSJobSchedules] WITH CHECK CHECK CONSTRAINT [FK_JSJobSchedules_JSJobs];

ALTER TABLE [dbo].[JSJobSchedules] WITH CHECK CHECK CONSTRAINT [FK_JSJobSchedules_JSSharedSchedules];


GO
PRINT N'Update complete.'
GO
