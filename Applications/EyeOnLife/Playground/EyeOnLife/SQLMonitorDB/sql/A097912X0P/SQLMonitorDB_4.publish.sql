/*
Deployment script for SQLMonitorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SQLMonitorDB"
:setvar DefaultFilePrefix "SQLMonitorDB"
:setvar DefaultDataPath "D:\Program Files\Microsoft SQL Server\MSSQL10_50.REL02\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Program Files\Microsoft SQL Server\MSSQL10_50.REL02\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Dropping DF__tmp_ms_xx_JS__ID__62E4AA3C...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx_JS__ID__62E4AA3C];


GO
PRINT N'Dropping DF__tmp_ms_xx__HasSc__63D8CE75...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx__HasSc__63D8CE75];


GO
PRINT N'Dropping DF__tmp_ms_xx__HasSe__64CCF2AE...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx__HasSe__64CCF2AE];


GO
PRINT N'Dropping DF__tmp_ms_xx__HasSt__65C116E7...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx__HasSt__65C116E7];


GO
PRINT N'Dropping DF__tmp_ms_xx__IsEna__66B53B20...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [DF__tmp_ms_xx__IsEna__66B53B20];


GO
PRINT N'Dropping FK_JSJobs_Instances...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [FK_JSJobs_Instances];


GO
PRINT N'Dropping FK_JSJobs_JobServers...';


GO
ALTER TABLE [dbo].[JSJobs] DROP CONSTRAINT [FK_JSJobs_JobServers];


GO
PRINT N'Dropping FK_JSJobSchedules_JSJobs...';


GO
ALTER TABLE [dbo].[JSJobSchedules] DROP CONSTRAINT [FK_JSJobSchedules_JSJobs];


GO
PRINT N'Dropping FK_JSJobSteps_JSJobs...';


GO
ALTER TABLE [dbo].[JSJobSteps] DROP CONSTRAINT [FK_JSJobSteps_JSJobs];


GO
PRINT N'Starting rebuilding table [dbo].[JSJobs]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_JSJobs] (
    [ID]                     UNIQUEIDENTIFIER DEFAULT (newid()) NOT NULL,
    [JobServer_ID]           UNIQUEIDENTIFIER NULL,
    [Instance_ID]            UNIQUEIDENTIFIER NULL,
    [Name_Instance]          VARCHAR (256)    NULL,
    [Name_JSJob]             VARCHAR (256)    NULL,
    [Category]               VARCHAR (256)    NULL,
    [CurrentRunRetryAttempt] VARCHAR (256)    NULL,
    [CurrentRunStatus]       VARCHAR (256)    NULL,
    [DateCreated]            DATETIME2 (7)    NULL,
    [DateLastModified]       DATETIME2 (7)    NULL,
    [Description]            VARCHAR (256)    NULL,
    [HasSchedule]            BIT              DEFAULT 0 NULL,
    [HasServer]              BIT              DEFAULT 0 NULL,
    [HasStep]                BIT              DEFAULT 0 NULL,
    [IsEnabled]              BIT              DEFAULT 0 NULL,
    [JobType]                VARCHAR (256)    NULL,
    [LastRunDate]            DATETIME2 (7)    NULL,
    [LastRunOutcome]         VARCHAR (256)    NULL,
    [NextRunDate]            DATETIME2 (7)    NULL,
    [NextScheduleRunId]      INT              NULL,
    [OperatorsEmail]         VARCHAR (256)    NULL,
    [OriginatorsEmail]       VARCHAR (256)    NULL,
    [OwnerLoginName]         VARCHAR (256)    NULL,
    [StartStepID]            INT              NULL,
    [VersionNumber]          VARCHAR (256)    NULL,
    [ExpandJobSteps]         BIT              DEFAULT 0 NULL,
    [SnapShotDate]           DATETIME         NULL,
    [SnapShotError]          VARCHAR (256)    NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_JSJobs] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[JSJobs])
    BEGIN
        
        INSERT INTO [dbo].[tmp_ms_xx_JSJobs] ([ID], [JobServer_ID], [Instance_ID], [Name_Instance], [Name_JSJob], [Category], [CurrentRunRetryAttempt], [CurrentRunStatus], [DateCreated], [DateLastModified], [Description], [HasSchedule], [HasServer], [HasStep], [IsEnabled], [JobType], [LastRunDate], [LastRunOutcome], [NextRunDate], [NextScheduleRunId], [OperatorsEmail], [OriginatorsEmail], [OwnerLoginName], [StartStepID], [VersionNumber], [SnapShotDate], [SnapShotError])
        SELECT   [ID],
                 [JobServer_ID],
                 [Instance_ID],
                 [Name_Instance],
                 [Name_JSJob],
                 [Category],
                 [CurrentRunRetryAttempt],
                 [CurrentRunStatus],
                 [DateCreated],
                 [DateLastModified],
                 [Description],
                 [HasSchedule],
                 [HasServer],
                 [HasStep],
                 [IsEnabled],
                 [JobType],
                 [LastRunDate],
                 [LastRunOutcome],
                 [NextRunDate],
                 [NextScheduleRunId],
                 [OperatorsEmail],
                 [OriginatorsEmail],
                 [OwnerLoginName],
                 [StartStepID],
                 [VersionNumber],
                 [SnapShotDate],
                 [SnapShotError]
        FROM     [dbo].[JSJobs]
        ORDER BY [ID] ASC;
        
    END

DROP TABLE [dbo].[JSJobs];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_JSJobs]', N'JSJobs';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_JSJobs]', N'PK_JSJobs', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating FK_JSJobs_Instances...';


GO
ALTER TABLE [dbo].[JSJobs] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobs_Instances] FOREIGN KEY ([Instance_ID]) REFERENCES [dbo].[Instances] ([ID]);


GO
PRINT N'Creating FK_JSJobs_JobServers...';


GO
ALTER TABLE [dbo].[JSJobs] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobs_JobServers] FOREIGN KEY ([JobServer_ID]) REFERENCES [dbo].[JobServers] ([ID]);


GO
PRINT N'Creating FK_JSJobSchedules_JSJobs...';


GO
ALTER TABLE [dbo].[JSJobSchedules] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobSchedules_JSJobs] FOREIGN KEY ([JSJob_ID]) REFERENCES [dbo].[JSJobs] ([ID]);


GO
PRINT N'Creating FK_JSJobSteps_JSJobs...';


GO
ALTER TABLE [dbo].[JSJobSteps] WITH NOCHECK
    ADD CONSTRAINT [FK_JSJobSteps_JSJobs] FOREIGN KEY ([JSJob_ID]) REFERENCES [dbo].[JSJobs] ([ID]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[JSJobs] WITH CHECK CHECK CONSTRAINT [FK_JSJobs_Instances];

ALTER TABLE [dbo].[JSJobs] WITH CHECK CHECK CONSTRAINT [FK_JSJobs_JobServers];

ALTER TABLE [dbo].[JSJobSchedules] WITH CHECK CHECK CONSTRAINT [FK_JSJobSchedules_JSJobs];

ALTER TABLE [dbo].[JSJobSteps] WITH CHECK CHECK CONSTRAINT [FK_JSJobSteps_JSJobs];


GO
PRINT N'Update complete.'
GO
