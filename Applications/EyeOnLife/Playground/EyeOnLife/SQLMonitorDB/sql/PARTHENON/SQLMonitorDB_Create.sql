/*
Deployment script for SQLMonitorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SQLMonitorDB"
:setvar DefaultFilePrefix "SQLMonitorDB"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Creating [dbo].[DBRoles]...';


GO
CREATE TABLE [dbo].[DBRoles] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [Database_ID]      UNIQUEIDENTIFIER NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DateLastModified] DATETIME         NULL,
    [IsFixedRole]      BIT              NULL,
    [Name_Role]        VARCHAR (256)    NULL,
    CONSTRAINT [PK_DBRoles] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBFileGroups]...';


GO
CREATE TABLE [dbo].[DBFileGroups] (
    [ID]             UNIQUEIDENTIFIER NOT NULL,
    [Database_ID]    UNIQUEIDENTIFIER NULL,
    [SnapShotDate]   DATETIME         NULL,
    [SnapShotError]  VARCHAR (256)    NULL,
    [Name_FileGroup] VARCHAR (256)    NULL,
    [Size]           FLOAT (53)       NULL,
    CONSTRAINT [PK_FileGroups] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ServerRoles]...';


GO
CREATE TABLE [dbo].[ServerRoles] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [Instance_ID]      UNIQUEIDENTIFIER NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [Name_ServerRole]  VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DateLastModified] DATETIME         NULL,
    CONSTRAINT [PK_Roles] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Logins]...';


GO
CREATE TABLE [dbo].[Logins] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [Instance_ID]      UNIQUEIDENTIFIER NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [Name_Login]       VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DateLastModified] DATETIME         NULL,
    [DefaultDatabase]  VARCHAR (256)    NULL,
    [ID_Login]         INT              NULL,
    [IsSystemObject]   BIT              NULL,
    [LoginType]        VARCHAR (50)     NULL,
    CONSTRAINT [PK_Logins] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[LKUP_ADDomains]...';


GO
CREATE TABLE [dbo].[LKUP_ADDomains] (
    [ID]           INT          NOT NULL,
    [ADDomainName] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[LKUP_Environments]...';


GO
CREATE TABLE [dbo].[LKUP_Environments] (
    [ID]              INT          NOT NULL,
    [EnvironmentName] VARCHAR (50) NOT NULL,
    [ADDomain_ID]     INT          NULL,
    [IPBase]          VARCHAR (15) NULL,
    [IPMask]          VARCHAR (15) NULL,
    [SecurityZone]    VARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBViews]...';


GO
CREATE TABLE [dbo].[DBViews] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [Database_ID]      UNIQUEIDENTIFIER NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DateLastModified] DATETIME         NULL,
    [IsSystemObject]   BIT              NULL,
    [Owner]            VARCHAR (50)     NULL,
    [View_ID]          INT              NULL,
    [Name_View]        VARCHAR (256)    NULL,
    [EP_Purpose]       VARCHAR (50)     NULL,
    CONSTRAINT [PK_DBViews] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBTables]...';


GO
CREATE TABLE [dbo].[DBTables] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [Database_ID]      UNIQUEIDENTIFIER NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [Name_Table]       VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DataSpaceUsed]    FLOAT (53)       NULL,
    [DateLastModified] DATETIME         NULL,
    [FileGroup]        VARCHAR (256)    NULL,
    [HasIndex]         BIT              NULL,
    [IsSystemObject]   BIT              NULL,
    [Owner]            VARCHAR (256)    NULL,
    [RowCount]         BIGINT           NULL,
    [Table_ID]         VARCHAR (50)     NULL,
    [EP_Purpose]       VARCHAR (50)     NULL,
    CONSTRAINT [PK_DBTables] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ServerInfo]...';


GO
CREATE TABLE [dbo].[ServerInfo] (
    [ID]            INT              NOT NULL,
    [Server_ID]     UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]  DATETIME         NOT NULL,
    [SnapShotError] VARCHAR (256)    NULL,
    CONSTRAINT [PK_ServerInfo] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DatabaseInfo]...';


GO
CREATE TABLE [dbo].[DatabaseInfo] (
    [ID]              INT              NOT NULL,
    [SnapShotDate]    DATETIME         NOT NULL,
    [SnapShotError]   VARCHAR (256)    NULL,
    [Database_ID]     UNIQUEIDENTIFIER NOT NULL,
    [Instance_ID]     UNIQUEIDENTIFIER NOT NULL,
    [IndexSpaceUsage] FLOAT (53)       NULL,
    [DataSpaceUsage]  FLOAT (53)       NULL,
    [Size]            FLOAT (53)       NULL,
    [SpaceAvailable]  FLOAT (53)       NULL,
    CONSTRAINT [PK_DatabaseInfo] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[InstanceInfo]...';


GO
CREATE TABLE [dbo].[InstanceInfo] (
    [ID]             INT              NOT NULL,
    [Instance_ID]    UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]   DATETIME         NOT NULL,
    [SnapShotError]  VARCHAR (256)    NULL,
    [PhysicalMemory] INT              NULL,
    [Processors]     INT              NULL,
    CONSTRAINT [PK_InstanceInfo] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[LKUP_SQLServerVersions]...';


GO
CREATE TABLE [dbo].[LKUP_SQLServerVersions] (
    [ID]       INT          NOT NULL,
    [Name]     VARCHAR (30) NULL,
    [CodeName] VARCHAR (20) NULL,
    [RTM]      VARCHAR (20) NULL,
    [SP1]      VARCHAR (20) NULL,
    [SP2]      VARCHAR (20) NULL,
    [SP3]      VARCHAR (20) NULL,
    [SP4]      VARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBLogFileInfo]...';


GO
CREATE TABLE [dbo].[DBLogFileInfo] (
    [ID]                 INT              NOT NULL,
    [DBLogFile_ID]       UNIQUEIDENTIFIER NULL,
    [Database_ID]        UNIQUEIDENTIFIER NULL,
    [SnapShotDate]       DATETIME         NULL,
    [SnapShotError]      VARCHAR (256)    NULL,
    [BytesReadFromDisk]  BIGINT           NULL,
    [BytesWrittenToDisk] BIGINT           NULL,
    [MaxSize]            FLOAT (53)       NULL,
    [NumberOfDiskReads]  BIGINT           NULL,
    [NumberOfDiskWrites] BIGINT           NULL,
    [Size]               FLOAT (53)       NULL,
    [UsedSpace]          FLOAT (53)       NULL,
    [VolumeFreeSpace]    BIGINT           NULL,
    CONSTRAINT [PK_DBLogFileInfo] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBDataFileInfo]...';


GO
CREATE TABLE [dbo].[DBDataFileInfo] (
    [ID]                 INT              NOT NULL,
    [DBDataFile_ID]      UNIQUEIDENTIFIER NULL,
    [Database_ID]        UNIQUEIDENTIFIER NULL,
    [SnapShotDate]       DATETIME         NULL,
    [SnapShotError]      VARCHAR (256)    NULL,
    [AvailableSpace]     FLOAT (53)       NULL,
    [BytesReadFromDisk]  BIGINT           NULL,
    [BytesWrittenToDisk] BIGINT           NULL,
    [MaxSize]            FLOAT (53)       NULL,
    [NumberOfDiskReads]  BIGINT           NULL,
    [NumberOfDiskWrites] BIGINT           NULL,
    [Size]               FLOAT (53)       NULL,
    [UsedSpace]          FLOAT (53)       NULL,
    [VolumeFreeSpace]    BIGINT           NULL,
    CONSTRAINT [PK_DBDataFileInfo] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[VWTriggers]...';


GO
CREATE TABLE [dbo].[VWTriggers] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [DBView_ID]        UNIQUEIDENTIFIER NULL,
    [Name_Trigger]     VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DateLastModified] DATETIME         NULL,
    CONSTRAINT [PK_VWTriggers] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[TBTriggers]...';


GO
CREATE TABLE [dbo].[TBTriggers] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [DBTable_ID]       UNIQUEIDENTIFIER NULL,
    [Name_Trigger]     VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DateLastModified] DATETIME         NULL,
    CONSTRAINT [PK_TBTriggers] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Jobs]...';


GO
CREATE TABLE [dbo].[Jobs] (
    [ID]            UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]  DATETIME         NULL,
    [SnapShotError] VARCHAR (256)    NULL,
    [Instance_ID]   UNIQUEIDENTIFIER NULL,
    CONSTRAINT [PK_Jobs] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBUserDefinedFunctions]...';


GO
CREATE TABLE [dbo].[DBUserDefinedFunctions] (
    [ID]                       UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]             DATETIME         NULL,
    [SnapShotError]            VARCHAR (256)    NULL,
    [Database_ID]              UNIQUEIDENTIFIER NULL,
    [Name_UserDefinedFunction] VARCHAR (256)    NULL,
    [CreateDate]               DATETIME         NULL,
    [DateLastModified]         DATETIME         NULL,
    [IsSystemObject]           BIT              NULL,
    CONSTRAINT [PK_DBUserDefinedFunctions] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBDdlTriggers]...';


GO
CREATE TABLE [dbo].[DBDdlTriggers] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [Database_ID]      UNIQUEIDENTIFIER NULL,
    [Name_Trigger]     VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DateLastModified] DATETIME         NULL,
    CONSTRAINT [PK_DBDdlTriggers] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBLogFiles]...';


GO
CREATE TABLE [dbo].[DBLogFiles] (
    [ID]                 UNIQUEIDENTIFIER NOT NULL,
    [Database_ID]        UNIQUEIDENTIFIER NULL,
    [Name_LogFile]       VARCHAR (300)    NULL,
    [SnapShotDate]       DATETIME         NULL,
    [SnapShotError]      VARCHAR (256)    NULL,
    [BytesReadFromDisk]  BIGINT           NULL,
    [BytesWrittenToDisk] BIGINT           NULL,
    [FileName]           VARCHAR (256)    NULL,
    [Growth]             INT              NULL,
    [GrowthType]         VARCHAR (50)     NULL,
    [ID_FileGroup]       INT              NULL,
    [IsPrimaryFile]      BIT              NULL,
    [MaxSize]            BIGINT           NULL,
    [NumberOfDiskReads]  BIGINT           NULL,
    [NumberOfDiskWrites] BIGINT           NULL,
    [Size]               BIGINT           NULL,
    [UsedSpace]          BIGINT           NULL,
    [VolumeFreeSpace]    BIGINT           NULL,
    CONSTRAINT [PK_LogFiles] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBDataFiles]...';


GO
CREATE TABLE [dbo].[DBDataFiles] (
    [ID]                 UNIQUEIDENTIFIER NOT NULL,
    [FileGroup_ID]       UNIQUEIDENTIFIER NULL,
    [Database_ID]        UNIQUEIDENTIFIER NULL,
    [Name_DataFile]      VARCHAR (400)    NULL,
    [SnapShotDate]       DATETIME         NULL,
    [SnapShotError]      VARCHAR (256)    NULL,
    [AvailableSpace]     FLOAT (53)       NULL,
    [BytesReadFromDisk]  BIGINT           NULL,
    [BytesWrittenToDisk] BIGINT           NULL,
    [FileName]           VARCHAR (400)    NULL,
    [Growth]             INT              NULL,
    [GrowthType]         VARCHAR (50)     NULL,
    [ID_DataFile]        INT              NULL,
    [IsPrimaryFile]      BIT              NULL,
    [MaxSize]            FLOAT (53)       NULL,
    [NumberOfDiskReads]  BIGINT           NULL,
    [NumberOfDiskWrites] BIGINT           NULL,
    [Size]               FLOAT (53)       NULL,
    [UsedSpace]          FLOAT (53)       NULL,
    [VolumeFreeSpace]    BIGINT           NULL,
    CONSTRAINT [PK_DataFiles] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBStoredProcedures]...';


GO
CREATE TABLE [dbo].[DBStoredProcedures] (
    [ID]                             UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]                   DATETIME         NULL,
    [SnapShotError]                  VARCHAR (256)    NULL,
    [Database_ID]                    UNIQUEIDENTIFIER NULL,
    [Name_StoredProcedure]           VARCHAR (256)    NULL,
    [StoredProcedure_ID]             VARCHAR (50)     NULL,
    [Owner]                          VARCHAR (256)    NULL,
    [MethodName]                     VARCHAR (256)    NULL,
    [TextHeader]                     VARCHAR (MAX)    NULL,
    [TextBody]                       VARCHAR (MAX)    NULL,
    [IsSystemObject]                 BIT              NULL,
    [CreateDate]                     DATETIME         NULL,
    [DateLastModified]               DATETIME         NULL,
    [RetrieveStoredProcedureContent] BIT              NULL,
    CONSTRAINT [PK_DBStoredProcedures] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Instances]...';


GO
CREATE TABLE [dbo].[Instances] (
    [ID]                        UNIQUEIDENTIFIER NOT NULL,
    [Server_ID]                 UNIQUEIDENTIFIER NULL,
    [SnapShotDate]              DATETIME         NULL,
    [SnapShotError]             VARCHAR (256)    NULL,
    [Name_Instance]             VARCHAR (256)    NOT NULL,
    [BrowserStartMode]          VARCHAR (50)     NULL,
    [Collation]                 VARCHAR (50)     NULL,
    [Edition]                   VARCHAR (50)     NULL,
    [EngineEdition]             VARCHAR (50)     NULL,
    [IsClustered]               BIT              NULL,
    [NetName]                   VARCHAR (50)     NULL,
    [OSVersion]                 VARCHAR (50)     NULL,
    [PerfMonMode]               VARCHAR (20)     NULL,
    [PhysicalMemory]            INT              NULL,
    [Platform]                  VARCHAR (50)     NULL,
    [Processors]                INT              NULL,
    [Product]                   VARCHAR (50)     NULL,
    [ProductLevel]              VARCHAR (50)     NULL,
    [ServiceInstanceId]         VARCHAR (50)     NULL,
    [ServiceName]               VARCHAR (50)     NULL,
    [ServiceAccount]            VARCHAR (50)     NULL,
    [Status]                    VARCHAR (20)     NULL,
    [Version]                   VARCHAR (50)     NULL,
    [IsMonitored]               BIT              NULL,
    [ExpandContent]             BIT              NULL,
    [ExpandStorage]             BIT              NULL,
    [ExpandJobs]                BIT              NULL,
    [ExpandLogins]              BIT              NULL,
    [ExpandServerRoles]         BIT              NULL,
    [ExpandTriggers]            BIT              NULL,
    [DefaultDatabaseExpandMask] INT              NOT NULL,
    CONSTRAINT [PK_Instances] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Servers]...';


GO
CREATE TABLE [dbo].[Servers] (
    [ID]                        UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]              DATETIME         NULL,
    [SnapShotError]             VARCHAR (256)    NULL,
    [NetName]                   VARCHAR (50)     NOT NULL,
    [IPAddress]                 VARCHAR (20)     NULL,
    [State]                     VARCHAR (50)     NULL,
    [OSVersion]                 VARCHAR (50)     NULL,
    [PhysicalMemory]            INT              NULL,
    [Processors]                INT              NULL,
    [Platform]                  VARCHAR (50)     NULL,
    [ADDomain]                  VARCHAR (50)     NULL,
    [Environment]               VARCHAR (50)     NULL,
    [SecurityZone]              VARCHAR (50)     NULL,
    [DefaultInstanceExpandMask] INT              NOT NULL,
    CONSTRAINT [PK_Servers] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DBUsers]...';


GO
CREATE TABLE [dbo].[DBUsers] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [SnapShotDate]     DATETIME         NULL,
    [SnapShotError]    VARCHAR (256)    NULL,
    [Database_ID]      UNIQUEIDENTIFIER NULL,
    [Name_Database]    VARCHAR (256)    NULL,
    [CreateDate]       DATETIME         NULL,
    [DateLastModified] DATETIME         NULL,
    [HasDBAccess]      BIT              NULL,
    [IsSystemObject]   BIT              NULL,
    [LoginType]        VARCHAR (50)     NULL,
    [Login]            VARCHAR (256)    NULL,
    [Name_User]        VARCHAR (256)    NULL,
    CONSTRAINT [PK_DBUsers] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Databases]...';


GO
CREATE TABLE [dbo].[Databases] (
    [ID]                         UNIQUEIDENTIFIER NOT NULL,
    [Instance_ID]                UNIQUEIDENTIFIER NULL,
    [Name_Instance]              VARCHAR (256)    NULL,
    [SnapShotDate]               DATETIME         NULL,
    [SnapShotError]              VARCHAR (256)    NULL,
    [Name_Database]              VARCHAR (256)    NULL,
    [CreateDate]                 DATETIME         NULL,
    [DataBaseGuid]               VARCHAR (50)     NULL,
    [DataSpaceUsage]             FLOAT (53)       NULL,
    [DefaultFileGroup]           VARCHAR (256)    NULL,
    [ID_DB]                      INT              NULL,
    [IndexSpaceUsage]            FLOAT (53)       NULL,
    [LastBackupDate]             DATETIME         NULL,
    [LastDifferentialBackupDate] DATETIME         NULL,
    [LastLogBackupDate]          DATETIME         NULL,
    [Owner]                      VARCHAR (50)     NULL,
    [RecoveryModel]              VARCHAR (50)     NULL,
    [Size]                       FLOAT (53)       NULL,
    [SpaceAvailable]             FLOAT (53)       NULL,
    [EP_Area]                    VARCHAR (50)     NULL,
    [EP_Team]                    VARCHAR (50)     NULL,
    [EP_PrimaryDBContact]        VARCHAR (50)     NULL,
    [EP_DBApprover]              VARCHAR (50)     NULL,
    [EP_DRTier]                  VARCHAR (50)     NULL,
    [IsMonitored]                BIT              NULL,
    [ExpandDataFiles]            BIT              NULL,
    [ExpandFileGroups]           BIT              NULL,
    [ExpandLogFiles]             BIT              NULL,
    [ExpandRoles]                BIT              NULL,
    [ExpandStoredProcedures]     BIT              NULL,
    [ExpandTables]               BIT              NULL,
    [ExpandTriggers]             BIT              NULL,
    [ExpandUserDefinedFunctions] BIT              NULL,
    [ExpandUsers]                BIT              NULL,
    [ExpandViews]                BIT              NULL,
    CONSTRAINT [PK_Databases] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[DBStoredProcedures]....';


GO
ALTER TABLE [dbo].[DBStoredProcedures]
    ADD DEFAULT 0 FOR [RetrieveStoredProcedureContent];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT (newid()) FOR [ID];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT 0 FOR [IsMonitored];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT 0 FOR [ExpandContent];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT 0 FOR [ExpandStorage];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT 0 FOR [ExpandJobs];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT 0 FOR [ExpandLogins];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT 0 FOR [ExpandServerRoles];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT 0 FOR [ExpandTriggers];


GO
PRINT N'Creating Default Constraint on [dbo].[Instances]....';


GO
ALTER TABLE [dbo].[Instances]
    ADD DEFAULT 0 FOR [DefaultDatabaseExpandMask];


GO
PRINT N'Creating DF_Servers_id...';


GO
ALTER TABLE [dbo].[Servers]
    ADD CONSTRAINT [DF_Servers_id] DEFAULT (newid()) FOR [ID];


GO
PRINT N'Creating Default Constraint on [dbo].[Servers]....';


GO
ALTER TABLE [dbo].[Servers]
    ADD DEFAULT 0 FOR [DefaultInstanceExpandMask];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT (newid()) FOR [ID];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [IsMonitored];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandDataFiles];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandFileGroups];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandLogFiles];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandRoles];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandStoredProcedures];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandTables];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandTriggers];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandUserDefinedFunctions];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandUsers];


GO
PRINT N'Creating Default Constraint on [dbo].[Databases]....';


GO
ALTER TABLE [dbo].[Databases]
    ADD DEFAULT 0 FOR [ExpandViews];


GO
PRINT N'Creating FK_DBRoles_Databases...';


GO
ALTER TABLE [dbo].[DBRoles]
    ADD CONSTRAINT [FK_DBRoles_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_DBFileGroups_Databases...';


GO
ALTER TABLE [dbo].[DBFileGroups]
    ADD CONSTRAINT [FK_DBFileGroups_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_Roles_Instances...';


GO
ALTER TABLE [dbo].[ServerRoles]
    ADD CONSTRAINT [FK_Roles_Instances] FOREIGN KEY ([Instance_ID]) REFERENCES [dbo].[Instances] ([ID]);


GO
PRINT N'Creating FK_Logins_Instances...';


GO
ALTER TABLE [dbo].[Logins]
    ADD CONSTRAINT [FK_Logins_Instances] FOREIGN KEY ([Instance_ID]) REFERENCES [dbo].[Instances] ([ID]);


GO
PRINT N'Creating FK_Environments_ADDomains...';


GO
ALTER TABLE [dbo].[LKUP_Environments]
    ADD CONSTRAINT [FK_Environments_ADDomains] FOREIGN KEY ([ADDomain_ID]) REFERENCES [dbo].[LKUP_ADDomains] ([ID]);


GO
PRINT N'Creating FK_DBViews_Databases...';


GO
ALTER TABLE [dbo].[DBViews]
    ADD CONSTRAINT [FK_DBViews_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_DBTables_Databases...';


GO
ALTER TABLE [dbo].[DBTables]
    ADD CONSTRAINT [FK_DBTables_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_ServerInfo_Servers...';


GO
ALTER TABLE [dbo].[ServerInfo]
    ADD CONSTRAINT [FK_ServerInfo_Servers] FOREIGN KEY ([Server_ID]) REFERENCES [dbo].[Servers] ([ID]);


GO
PRINT N'Creating FK_DatbaseInfo_Databases...';


GO
ALTER TABLE [dbo].[DatabaseInfo]
    ADD CONSTRAINT [FK_DatbaseInfo_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_DatabaseInfo_Instances...';


GO
ALTER TABLE [dbo].[DatabaseInfo]
    ADD CONSTRAINT [FK_DatabaseInfo_Instances] FOREIGN KEY ([Instance_ID]) REFERENCES [dbo].[Instances] ([ID]);


GO
PRINT N'Creating FK_InstanceInfo_Instances...';


GO
ALTER TABLE [dbo].[InstanceInfo]
    ADD CONSTRAINT [FK_InstanceInfo_Instances] FOREIGN KEY ([Instance_ID]) REFERENCES [dbo].[Instances] ([ID]);


GO
PRINT N'Creating FK_DBLogFileInfo_DBLogFiles...';


GO
ALTER TABLE [dbo].[DBLogFileInfo]
    ADD CONSTRAINT [FK_DBLogFileInfo_DBLogFiles] FOREIGN KEY ([DBLogFile_ID]) REFERENCES [dbo].[DBLogFiles] ([ID]);


GO
PRINT N'Creating FK_DBDataFileInfo_DBDataFiles...';


GO
ALTER TABLE [dbo].[DBDataFileInfo]
    ADD CONSTRAINT [FK_DBDataFileInfo_DBDataFiles] FOREIGN KEY ([DBDataFile_ID]) REFERENCES [dbo].[DBDataFiles] ([ID]);


GO
PRINT N'Creating FK_VWTriggers_Tables...';


GO
ALTER TABLE [dbo].[VWTriggers]
    ADD CONSTRAINT [FK_VWTriggers_Tables] FOREIGN KEY ([DBView_ID]) REFERENCES [dbo].[DBViews] ([ID]);


GO
PRINT N'Creating FK_TBTriggers_Tables...';


GO
ALTER TABLE [dbo].[TBTriggers]
    ADD CONSTRAINT [FK_TBTriggers_Tables] FOREIGN KEY ([DBTable_ID]) REFERENCES [dbo].[DBTables] ([ID]);


GO
PRINT N'Creating FK_Jobs_Instances...';


GO
ALTER TABLE [dbo].[Jobs]
    ADD CONSTRAINT [FK_Jobs_Instances] FOREIGN KEY ([Instance_ID]) REFERENCES [dbo].[Instances] ([ID]);


GO
PRINT N'Creating FK_DBUserDefinedFunctions_Databases...';


GO
ALTER TABLE [dbo].[DBUserDefinedFunctions]
    ADD CONSTRAINT [FK_DBUserDefinedFunctions_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_DBDdlTriggers_Databases...';


GO
ALTER TABLE [dbo].[DBDdlTriggers]
    ADD CONSTRAINT [FK_DBDdlTriggers_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_DBLogFiles_Databases...';


GO
ALTER TABLE [dbo].[DBLogFiles]
    ADD CONSTRAINT [FK_DBLogFiles_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_DBDataFiles_FileGroups...';


GO
ALTER TABLE [dbo].[DBDataFiles]
    ADD CONSTRAINT [FK_DBDataFiles_FileGroups] FOREIGN KEY ([FileGroup_ID]) REFERENCES [dbo].[DBFileGroups] ([ID]);


GO
PRINT N'Creating FK_DBStoredProcedures_Databases...';


GO
ALTER TABLE [dbo].[DBStoredProcedures]
    ADD CONSTRAINT [FK_DBStoredProcedures_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_Instances_Servers...';


GO
ALTER TABLE [dbo].[Instances]
    ADD CONSTRAINT [FK_Instances_Servers] FOREIGN KEY ([Server_ID]) REFERENCES [dbo].[Servers] ([ID]);


GO
PRINT N'Creating FK_DBUsers_Databases...';


GO
ALTER TABLE [dbo].[DBUsers]
    ADD CONSTRAINT [FK_DBUsers_Databases] FOREIGN KEY ([Database_ID]) REFERENCES [dbo].[Databases] ([ID]);


GO
PRINT N'Creating FK_Databases_Instances...';


GO
ALTER TABLE [dbo].[Databases]
    ADD CONSTRAINT [FK_Databases_Instances] FOREIGN KEY ([Instance_ID]) REFERENCES [dbo].[Instances] ([ID]);


GO
PRINT N'Creating [AutoCreatedLocal]...';


GO
CREATE ROUTE [AutoCreatedLocal]
    AUTHORIZATION [dbo]
    WITH ADDRESS = N'LOCAL';


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3cbb86fa-7a20-4ce1-8587-6fd693cd18c2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3cbb86fa-7a20-4ce1-8587-6fd693cd18c2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e08835c5-9389-4e22-af41-4a165ddfae25')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e08835c5-9389-4e22-af41-4a165ddfae25')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '42e1ff03-aba6-447d-a23b-0bf4f9c98700')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('42e1ff03-aba6-447d-a23b-0bf4f9c98700')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '401b8d02-ebd7-4036-9546-d133a0ffcbed')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('401b8d02-ebd7-4036-9546-d133a0ffcbed')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '411cba9f-65dd-4a89-ae56-56271d451edb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('411cba9f-65dd-4a89-ae56-56271d451edb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c7dae6f3-a52b-4e1d-a4a6-6c8798a7342e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c7dae6f3-a52b-4e1d-a4a6-6c8798a7342e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f194cc3c-f115-4b6a-9825-ac87bccc40f5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f194cc3c-f115-4b6a-9825-ac87bccc40f5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd806f9a0-55a5-4776-bdbb-58ae321f36a9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d806f9a0-55a5-4776-bdbb-58ae321f36a9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b7977c8c-9ce2-48f1-81ab-4727dc99da0e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b7977c8c-9ce2-48f1-81ab-4727dc99da0e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6c3dd162-f2a3-49ff-90bc-5caca0d17119')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6c3dd162-f2a3-49ff-90bc-5caca0d17119')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6ef611e9-1b3e-4511-a7d6-c1dcdb52a505')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6ef611e9-1b3e-4511-a7d6-c1dcdb52a505')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '442eedfb-46c1-415c-8c73-9305392ee13b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('442eedfb-46c1-415c-8c73-9305392ee13b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '798436d0-6b8f-428a-b983-2a08f9380328')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('798436d0-6b8f-428a-b983-2a08f9380328')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2ca119fc-84e0-402e-9b3a-faa53c996396')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2ca119fc-84e0-402e-9b3a-faa53c996396')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '52e4869d-f749-4472-9515-73df85a3b8fb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('52e4869d-f749-4472-9515-73df85a3b8fb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c89a87a4-82f8-496d-8b85-b25998b098e7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c89a87a4-82f8-496d-8b85-b25998b098e7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e5bda5d2-3924-4fe0-817d-69c629da48b8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e5bda5d2-3924-4fe0-817d-69c629da48b8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7884f0bd-7711-4be3-89a3-7513760c82ce')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7884f0bd-7711-4be3-89a3-7513760c82ce')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '943f14cf-f39c-467e-8443-0a297954715d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('943f14cf-f39c-467e-8443-0a297954715d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a2781219-f08e-4747-bb4f-6b8e44dd91c9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a2781219-f08e-4747-bb4f-6b8e44dd91c9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8f6e0400-1045-486b-a83f-c81644668b40')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8f6e0400-1045-486b-a83f-c81644668b40')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd5d7eea1-7eec-4e9c-9ff8-b6a46a65dbc4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d5d7eea1-7eec-4e9c-9ff8-b6a46a65dbc4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '038dcf66-a8b9-418d-a5f2-f61fec542f9c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('038dcf66-a8b9-418d-a5f2-f61fec542f9c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fe64c8b3-4c0a-44b5-873c-e8e9bccd84a4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fe64c8b3-4c0a-44b5-873c-e8e9bccd84a4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7aa05bf4-fb24-4469-b4e2-1df9082b7076')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7aa05bf4-fb24-4469-b4e2-1df9082b7076')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bd3daa10-c53c-4399-8425-09e6d41b05ae')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bd3daa10-c53c-4399-8425-09e6d41b05ae')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c318e889-f683-4285-bf02-d117bf06ef72')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c318e889-f683-4285-bf02-d117bf06ef72')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4d488896-1195-4067-b6f8-ec1121a83063')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4d488896-1195-4067-b6f8-ec1121a83063')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '81f261b1-80f5-4709-b61d-a5ce3dfdb94b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('81f261b1-80f5-4709-b61d-a5ce3dfdb94b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2e9b59f8-995f-40cf-b1a2-dd5209412efa')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2e9b59f8-995f-40cf-b1a2-dd5209412efa')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '50982a43-07ca-4f60-a394-dd0d6310f9f2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('50982a43-07ca-4f60-a394-dd0d6310f9f2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '879329b4-290f-4261-a89f-213052dc8cf9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('879329b4-290f-4261-a89f-213052dc8cf9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5e4361f2-11dc-4eab-bd69-fa3e5c618728')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5e4361f2-11dc-4eab-bd69-fa3e5c618728')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '214b910c-20bd-4f6d-93cc-52761db20392')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('214b910c-20bd-4f6d-93cc-52761db20392')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8da4640e-6dd3-4c70-80f0-3aa7424007cc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8da4640e-6dd3-4c70-80f0-3aa7424007cc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '62823929-d697-42e5-91e5-f16a55b5863f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('62823929-d697-42e5-91e5-f16a55b5863f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '513b4def-de91-47bf-be03-4a37cc42567c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('513b4def-de91-47bf-be03-4a37cc42567c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8b08a913-9cbf-4345-93b8-cb2b3e8d6e7e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8b08a913-9cbf-4345-93b8-cb2b3e8d6e7e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2a109eaa-bb7a-40a9-aff4-e5c906935831')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2a109eaa-bb7a-40a9-aff4-e5c906935831')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '74386f23-0355-4be6-ab4b-322bb942e435')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('74386f23-0355-4be6-ab4b-322bb942e435')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9a1b21f5-5a52-4c50-9210-cd0d1f461751')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9a1b21f5-5a52-4c50-9210-cd0d1f461751')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0ab0b84b-5349-48ad-b736-93069c912a62')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0ab0b84b-5349-48ad-b736-93069c912a62')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '915603ec-af22-4f4b-8f20-760b4b5fef28')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('915603ec-af22-4f4b-8f20-760b4b5fef28')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0623675e-b6dc-4342-b6dc-756099a58b51')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0623675e-b6dc-4342-b6dc-756099a58b51')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0ee0245d-8394-435d-8dfd-5835463beb12')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0ee0245d-8394-435d-8dfd-5835463beb12')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bf475993-345c-4bfc-9e87-69285ee83d2f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bf475993-345c-4bfc-9e87-69285ee83d2f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '636656fd-c26f-48ff-bfc8-28ac61b1bbed')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('636656fd-c26f-48ff-bfc8-28ac61b1bbed')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3c460449-4885-47f4-a35e-16e7c5e57bac')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3c460449-4885-47f4-a35e-16e7c5e57bac')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'aefe837d-2444-4b21-b84f-e3d9cba4c3f2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('aefe837d-2444-4b21-b84f-e3d9cba4c3f2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '944bb14d-b415-45cf-82ff-d288c41f054a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('944bb14d-b415-45cf-82ff-d288c41f054a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ee1c9b61-4ab7-480a-a06c-48551b72801f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ee1c9b61-4ab7-480a-a06c-48551b72801f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd4f4964c-8575-4b58-bf55-faa35ccb53c2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d4f4964c-8575-4b58-bf55-faa35ccb53c2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cfc29872-4e5c-4c0f-9ed5-37b2de27d17f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cfc29872-4e5c-4c0f-9ed5-37b2de27d17f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '87130ecd-7734-4bd2-bd88-a0071eade83a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('87130ecd-7734-4bd2-bd88-a0071eade83a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e841e99c-f4e6-4992-bcd6-f0958233d9ca')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e841e99c-f4e6-4992-bcd6-f0958233d9ca')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '43a5cb8a-1132-4c8a-b0f2-045464f9025f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('43a5cb8a-1132-4c8a-b0f2-045464f9025f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '130ea762-f5c1-4f1c-8f06-a6417ef5d3fb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('130ea762-f5c1-4f1c-8f06-a6417ef5d3fb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '50cf5058-0106-45be-9c6a-952d7b19e363')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('50cf5058-0106-45be-9c6a-952d7b19e363')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'eb6b3033-f65d-4854-8a7b-7e9ab55c0ff6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('eb6b3033-f65d-4854-8a7b-7e9ab55c0ff6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2af4bf20-c656-4d9b-8f58-defdb2274262')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2af4bf20-c656-4d9b-8f58-defdb2274262')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.'
GO
