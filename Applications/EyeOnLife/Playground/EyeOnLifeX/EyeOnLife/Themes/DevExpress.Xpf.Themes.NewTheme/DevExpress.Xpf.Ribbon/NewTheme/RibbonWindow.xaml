<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerCaptionTemplate}">
        <Grid>
            <dxb:ContentViewport KeepPositiveLeftContentPosition="True" ClipToBounds="True">
                <TextBlock x:Name="TitleTextBlock" Foreground="#FF373A3D" Text="{Binding}" TextWrapping="Wrap" Margin="7,4,7,5" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" cs:Name="TextBlock_0001" />
            </dxb:ContentViewport>
        </Grid>
    </DataTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="21" />
        <Setter Property="Height" Value="21" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="21" />
        <Setter Property="Height" Value="21" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="21" />
        <Setter Property="Height" Value="21" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="21" />
        <Setter Property="Height" Value="21" />
    </Style>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBorder" Background="#FFFFFFFF" BorderBrush="#7F666666" BorderThickness="1" cs:Name="Border_0002">
            <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False" />
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsMaximized)}" Value="True" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerHeader" Background="#FFFFFFFF" cs:Name="Border_0003" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerHeader" Value="#FFFFFFFF" cs:Name="Setter_0001" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBody" Background="#FFFFFFFF" cs:Name="Border_0004">
            <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                <ContentPresenter />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}" TargetType="{x:Type ContentControl}"></Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="15,0,15,15" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="15,15,15,0" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="#FF373A3D" cs:Name="Setter_0002" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="15,15,15,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Stretch" Value="None" />
        <Setter Property="Margin" Value="0,0,4,0" />
    </Style>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerTemplate}">
        <Grid>
            <Border x:Name="FloatingContainerBorder" Background="#FFB9B9B9" cs:Name="Border_0005">
                <Border x:Name="FloatingContainerBackground" Background="#FFFFFFFF" Margin="1" cs:Name="Border_0006">
                    <Grid>
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="FloatingContainerHeader" IsHitTestVisible="False" Height="{Binding Path=RenderSize.Height, ElementName=FloatingContainerHeaderContent}" Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Grid VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="PART_CaptionContentPresenter" Grid.Column="0" Panel.ZIndex="100" Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}" Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <ContentPresenter x:Name="PART_RibbonCaptionContentPresenter" HorizontalAlignment="Left" Grid.Column="0" Panel.ZIndex="100" Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=RibbonFloatingContainerCaptionTemplate}}" Visibility="{Binding Path=IsRibbonCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <StackPanel x:Name="stackPanel" Margin="2" Orientation="Horizontal" Grid.Column="1">
                                        <Button x:Name="PART_Minimize" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}" Width="31" Height="17" Focusable="False" />
                                        <Button x:Name="PART_Restore" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}}" Width="31" Height="17" Focusable="False" />
                                        <Button x:Name="PART_Maximize" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}" Width="31" Height="17" Focusable="False" />
                                        <Button x:Name="PART_CloseButton" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}" Width="31" Height="17" Focusable="False" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <Border x:Name="FloatingContainerBody" Grid.Row="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}" Grid.Row="0" Grid.RowSpan="2">
                                        <dxc:BackgroundPanel x:Name="PART_ContainerContent" Content="{Binding}" />
                                    </Grid>
                                    <StackPanel x:Name="PART_StatusPanel" Grid.Row="1">
                                        <Thumb x:Name="PART_SizeGrip" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="16" Height="16" Cursor="SizeNWSE" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Opacity" TargetName="PART_CaptionContentPresenter" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsMaximized)}" Value="True">
                <Setter Property="Margin" TargetName="FloatingContainerBorder" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>